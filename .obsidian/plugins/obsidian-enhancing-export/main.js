"use strict";var Wl=(e,t,l)=>{if(!t.has(e))throw TypeError("Cannot "+l)};var Rl=(e,t,l)=>(Wl(e,t,"read from private field"),l?l.call(e):t.get(e)),hl=(e,t,l)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,l)},Nl=(e,t,l,n)=>(Wl(e,t,"write to private field"),n?n.call(e,l):t.set(e,l),l);/*!
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository https://github.com/mokeyish/obsidian-enhancing-export .
*/Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const Ze=require("obsidian"),Pn=require("child_process"),tt=require("process"),Hn=require("electron"),on=require("fs"),qt=require("path"),vn=require("util");function gl(e){const t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(e){for(const l in e)if(l!=="default"){const n=Object.getOwnPropertyDescriptor(e,l);Object.defineProperty(t,l,n.get?n:{enumerable:!0,get:()=>e[l]})}}return t.default=e,Object.freeze(t)}const qn=gl(Ze),ye=gl(Hn),yt=gl(on),$n=Uint8Array.from(atob("LS0gY3JlZGl0cyB0byB0YXJsZWIg4oCUIFN0YWNrRXhjaGFuZ2U6IGh0dHBzOi8vdGV4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8zOTIwNzAvcGFuZG9jLW1hcmtkb3duLWNyZWF0ZS1zZWxmLWNvbnRhaW5lZC1iaWItZmlsZS1mcm9tLWNpdGVkLXJlZmVyZW5jZXMKZnVuY3Rpb24gUGFuZG9jKGQpCiAgZC5tZXRhLnJlZmVyZW5jZXMgPSBwYW5kb2MudXRpbHMucmVmZXJlbmNlcyhkKQogIGQubWV0YS5iaWJsaW9ncmFwaHkgPSBuaWwKICByZXR1cm4gZAplbmQK"),e=>e.charCodeAt(0)),_n=Object.freeze(Object.defineProperty({__proto__:null,default:$n},Symbol.toStringTag,{value:"Module"})),ei=Uint8Array.from(atob("cGFja2FnZS5wYXRoPXBhY2thZ2UucGF0aC4uIjsiIC4uZGVidWcuZ2V0aW5mbygxKS5zb3VyY2U6bWF0Y2goIiguKlsvXFxdKSIpOnN1YigyKSAuLiAiPy5sdWEiCgpNb2RlPSdodWdvJwoKcmVxdWlyZSgnbWFya2Rvd24nKQ=="),e=>e.charCodeAt(0)),ti=Object.freeze(Object.defineProperty({__proto__:null,default:ei},Symbol.toStringTag,{value:"Module"})),li=Uint8Array.from(atob("cGFja2FnZS5wYXRoPWRlYnVnLmdldGluZm8oMSkuc291cmNlOmdzdWIoJ0AnLCcnKTpzdWIoMCk6bWF0Y2goJyguKlsvXFxdKScpOnN1YigwKSAuLiAnPy5sdWEnIC4uICc7JyAuLiBwYWNrYWdlLnBhdGgKCnJlcXVpcmUoInBvbHlmaWxsIikKbG9jYWwgdXJsID0gcmVxdWlyZSgndXJsJykKCmxvY2FsIHBhbmRvYz1wYW5kb2MKbG9jYWwgUEFORE9DX1NUQVRFPVBBTkRPQ19TVEFURQoKUEFORE9DX1ZFUlNJT046bXVzdF9iZV9hdF9sZWFzdCAnMi4xNycKCmxvY2FsIFBBVEggPSBwYW5kb2MucGF0aApsb2NhbCBkb2NfZGlyID0gbmlsCmxvY2FsIG1lZGlhX2RpciA9IG5pbAoKaWYgTW9kZSA9PSBuaWwgdGhlbgogIE1vZGUgPSAnZGVmYXVsdCcKZW5kCgotLSBwcmludCgiTW9kZTogIi4uTW9kZSkKCmlmIFBBTkRPQ19TVEFURS5vdXRwdXRfZmlsZSB0aGVuCiAgbG9jYWwgb3V0cHV0X2ZpbGUgPSBQQU5ET0NfU1RBVEUub3V0cHV0X2ZpbGUKICBkb2NfZGlyID0gUEFUSC5kaXJlY3Rvcnkob3V0cHV0X2ZpbGUpCiAgaWYgUEFORE9DX1dSSVRFUl9PUFRJT05TLnZhcmlhYmxlc1sibWVkaWFfZGlyIl0gdGhlbgogICAgbWVkaWFfZGlyID0gUEFORE9DX1dSSVRFUl9PUFRJT05TLnZhcmlhYmxlc1sibWVkaWFfZGlyIl0KICBlbHNlCiAgICBtZWRpYV9kaXIgPSBQQVRILnNwbGl0X2V4dGVuc2lvbihvdXRwdXRfZmlsZSkKICAgIGlmIE1vZGUgfj0gJ2h1Z28nIHRoZW4KICAgICAgbWVkaWFfZGlyID0gbWVkaWFfZGlyIC4uICctbWVkaWEnCiAgICBlbmQKICBlbmQKZW5kCmFzc2VydChkb2NfZGlyLCAiZG9jX2RpciBpcyBuaWwiKQphc3NlcnQobWVkaWFfZGlyLCAibWVkaWFfZGlyIGlzIG5pbCIpCgoKbG9jYWwgZnVuY3Rpb24gZ2V0X2Fic29sdXRlX3BhdGgoZmlsZV9wYXRoKQogIGlmIFBBVEguaXNfYWJzb2x1dGUoZmlsZV9wYXRoKSB0aGVuCiAgICByZXR1cm4gZmlsZV9wYXRoCiAgZW5kCiAgZm9yIF8sIGRpciBpbiBwYWlycyhQQU5ET0NfU1RBVEUucmVzb3VyY2VfcGF0aCkgZG8KICAgIGxvY2FsIGZ1bGxfcGF0aCA9IFBBVEguam9pbih7ZGlyLCBmaWxlX3BhdGh9KQogICAgaWYgb3MuZXhpc3RzKGZ1bGxfcGF0aCkgdGhlbgogICAgICByZXR1cm4gZnVsbF9wYXRoCiAgICBlbmQKICBlbmQKICBmb3IgXywgZmlsZSBpbiBwYWlycyhQQU5ET0NfU1RBVEUuaW5wdXRfZmlsZXMpIGRvCiAgICBpZiBub3QgUEFUSC5pc19hYnNvbHV0ZShmaWxlKSB0aGVuCiAgICAgIGZpbGUgPSBQQVRILmpvaW4oe3BhbmRvYy5zeXN0ZW0uZ2V0X3dvcmtpbmdfZGlyZWN0b3J5KCksIGZpbGVfcGF0aH0pCiAgICBlbmQKICAgIGxvY2FsIGRpciA9IFBBVEguZGlyZWN0b3J5KGZpbGUpCiAgICBsb2NhbCBmdWxsX3BhdGggPSBQQVRILmpvaW4oe2RpciwgZmlsZV9wYXRofSkKICAgIGlmIG9zLmV4aXN0cyhmdWxsX3BhdGgpIHRoZW4KICAgICAgcmV0dXJuIGZ1bGxfcGF0aAogICAgZW5kCiAgZW5kCiAgcmV0dXJuIG5pbAplbmQKCmxvY2FsIGZ1bmN0aW9uIGdldF9vdXRwdXRfZmlsZShmaWxlX3BhdGgpCiAgaWYgbWVkaWFfZGlyIHRoZW4KICAgIGxvY2FsIG5ld19maWxlX25hbWUgPSBwYW5kb2MudXRpbHMuc2hhMShmaWxlX3BhdGgpCiAgICBsb2NhbCBfLCBuZXdfZmlsZV9leHQgPSBQQVRILnNwbGl0X2V4dGVuc2lvbihmaWxlX3BhdGgpCiAgICBmaWxlX3BhdGggPSBuZXdfZmlsZV9uYW1lIC4uIG5ld19maWxlX2V4dAogICAgbG9jYWwgZnVsbF9wYXRoID0gUEFUSC5qb2luKHttZWRpYV9kaXIsIGZpbGVfcGF0aH0pCiAgICByZXR1cm4gZnVsbF9wYXRoCiAgZWxzZQogICAgcmV0dXJuIG5pbAogIGVuZAplbmQKCmxvY2FsIGZ1bmN0aW9uIGV4dHJhY3RfbWVkaWEoZmlsZV9wYXRoKQogIG9zLm1rZGlyKG1lZGlhX2RpcikKICBmaWxlX3BhdGggPSB1cmwuZGVjb2RlKGZpbGVfcGF0aCkKICBsb2NhbCBhYnNfcGF0aCA9IGdldF9hYnNvbHV0ZV9wYXRoKGZpbGVfcGF0aCkKICBsb2NhbCBmaWxlID0gZ2V0X291dHB1dF9maWxlKGZpbGVfcGF0aCkKICBpZiBhYnNfcGF0aCBhbmQgZmlsZSB0aGVuCiAgICBpZiBub3Qgb3MuZXhpc3RzKGZpbGUpIHRoZW4KICAgICAgb3MuY29weShhYnNfcGF0aCwgZmlsZSkKICAgIGVuZAogICAgbG9jYWwgcmVsX3BhdGggPSBQQVRILm1ha2VfcmVsYXRpdmUoZmlsZSwgZG9jX2RpciwgZmFsc2UpCiAgICBsb2NhbCBwYXJ0cyA9IFBBVEguc3BsaXQocmVsX3BhdGgpCiAgICBmb3IgaSx2IGluIGlwYWlycyhwYXJ0cykgZG8KICAgICAgcGFydHNbaV0gPSB1cmwuZW5jb2RlKHYpCiAgICBlbmQKICAgIGxvY2FsIGVuY29kZWRfcmVsX3BhdGggPSB0YWJsZS5jb25jYXQocGFydHMsICIvIikKICAgIGlmIE1vZGUgPT0gJ2h1Z28nIHRoZW4KICAgICAgZW5jb2RlZF9yZWxfcGF0aCA9ICcuLi8nIC4uIGVuY29kZWRfcmVsX3BhdGgKICAgIGVuZAogICAgcmV0dXJuIGVuY29kZWRfcmVsX3BhdGgKICBlbmQKZW5kCgpsb2NhbCBmdW5jdGlvbiByYXcocykKICByZXR1cm4gcGFuZG9jLlJhd0lubGluZSgnbWFya2Rvd24nLCBzKQplbmQKCmZ1bmN0aW9uIEltYWdlKGVsKQogIGxvY2FsIHNyYyA9IGV4dHJhY3RfbWVkaWEoZWwuc3JjKQogIGlmIHNyYyB0aGVuCiAgICBlbC5zcmMgPSBzcmMKICBlbmQKICByZXR1cm4gZWwKZW5kCgpmdW5jdGlvbiBTcGFjZSgpCiAgcmV0dXJuIHJhdygnICcpCmVuZAoKZnVuY3Rpb24gU29mdEJyZWFrKCkKICByZXR1cm4gcmF3KCdcbicpCmVuZAoKZnVuY3Rpb24gUmF3SW5saW5lKGVsKQogIGlmIGVsLmZvcm1hdCA9PSAiaHRtbCIgdGhlbgogICAgZWwuZm9ybWF0ID0gJ21hcmtkb3duJwogICAgZWwudGV4dCA9IHN0cmluZy5nc3ViKGVsLnRleHQsICc8aW1nW14+XSs+JywgZnVuY3Rpb24oaW1nKQogICAgICByZXR1cm4gc3RyaW5nLmdzdWIoaW1nLCAnc3JjPSIoW14iXSspIicsIGZ1bmN0aW9uKHVybCkKICAgICAgICBpZiBzdHJpbmcuZmluZCh1cmwsICdeW0hoXVtUdF1bVHRdW1BwXVtTc10/Oi8vJykgPT0gbmlsICB0aGVuCiAgICAgICAgICBsb2NhbCBleHRyYWN0X21lZGlhX3VybCA9IGV4dHJhY3RfbWVkaWEodXJsKQogICAgICAgICAgaWYgZXh0cmFjdF9tZWRpYV91cmwgdGhlbgogICAgICAgICAgICByZXR1cm4gJ3NyYz0iJyAuLiBleHRyYWN0X21lZGlhX3VybCAuLiAnIicKICAgICAgICAgIGVuZAogICAgICAgICAgcmV0dXJuICcxMjMnCiAgICAgICAgZW5kCiAgICAgICAgcmV0dXJuICdzcmM9IicgLi4gdXJsIC4uICciJwogICAgICBlbmQpCiAgICBlbmQpCiAgZW5kCiAgcmV0dXJuIGVsCmVuZAoKZnVuY3Rpb24gUmF3QmxvY2soZWwpCiAgaWYgZWwuZm9ybWF0ID09ICJodG1sIiB0aGVuCiAgICBlbC5mb3JtYXQgPSAnbWFya2Rvd24nCiAgZW5kCiAgcmV0dXJuIGVsCmVuZAoKZnVuY3Rpb24gTWF0aChlbCkKICBpZiBNb2RlID09ICdodWdvJyB0aGVuCiAgICBpZiBlbC5tYXRodHlwZSA9PSAnRGlzcGxheU1hdGgnIHRoZW4KICAgICAgcmV0dXJuIHJhdygne3s8IG1hdGhqYXggPn19XG4kJCcgIC4uIGVsLnRleHQgLi4gJyQkXG57ezwvbWF0aGpheCA+fX0nKQogICAgZWxzZQogICAgICBlbC50ZXh0ID0gc3RyaW5nLmdzdWIoZWwudGV4dCwgJ1xcW1xce1xcfV0nLCBmdW5jdGlvbiAodikKICAgICAgICByZXR1cm4gJ1xcJyAuLiB2CiAgICAgIGVuZCkKICAgICAgZWwudGV4dCA9IHN0cmluZy5nc3ViKGVsLnRleHQsICdfJywgZnVuY3Rpb24gKHYpCiAgICAgICAgcmV0dXJuICdcXCcgLi4gdgogICAgICBlbmQpCiAgICBlbmQKICBlbmQKICByZXR1cm4gZWwKZW5kCgpsb2NhbCBmdW5jdGlvbiBoZWFkZXJMaW5rKGlucHV0KQogIC0tIGdpdGh1YiBzdHlsZSBzZWN0aW9uIGxpbmsKICByZXR1cm4gIiMiLi5pbnB1dDpnc3ViKCcgJywgJy0nKQplbmQKCgpsb2NhbCBmdW5jdGlvbiBpbnNlcnRMaW5rKGNvbnRlbnQsIGxpbmtEZXNjcmlwdGlvbikKICBsb2NhbCBkZXNjcmlwdGlvblRleHQgPSB0YWJsZS5jb25jYXQobGlua0Rlc2NyaXB0aW9uLCAiIikKCiAgaWYgc3RyaW5nLmZpbmQoZGVzY3JpcHRpb25UZXh0LCAnfCcpIHRoZW4KICAgIGxvY2FsIHRhcmdldCwgZGVzYyA9IGRlc2NyaXB0aW9uVGV4dDptYXRjaCgiKC4qKXwoLiopIikKICAgIHRhYmxlLmluc2VydChjb250ZW50LCBwYW5kb2MuTGluayhkZXNjLCBoZWFkZXJMaW5rKHRhcmdldCkpKQogIGVsc2UKICAgIHRhYmxlLmluc2VydChjb250ZW50LCBwYW5kb2MuTGluayhkZXNjcmlwdGlvblRleHQsIGhlYWRlckxpbmsoZGVzY3JpcHRpb25UZXh0KSkpCiAgZW5kCmVuZAoKZnVuY3Rpb24gUGFyYShlbCkKICBsb2NhbCBjb250ZW50ID0gZWwuY29udGVudAogIGNvbnRlbnQgPSBQcm9jZXNzTWF0aChjb250ZW50KQogIGNvbnRlbnQgPSBQcm9jZXNzSW50ZXJuYWxMaW5rcyhjb250ZW50KQogIGVsLmNvbnRlbnQgPSBjb250ZW50CiAgcmV0dXJuIGVsCmVuZAoKZnVuY3Rpb24gUHJvY2Vzc01hdGgoZWxlbWVudHMpCiAgbG9jYWwgY29udGVudCA9IHt9CiAgbG9jYWwgaW5fZGlzcGxheV9tYXRoID0gZmFsc2UKICBmb3IgXywgaXRlbSBpbiBwYWlycyhlbGVtZW50cykgZG8KICAgIGlmIGl0ZW0udCA9PSAnU3RyJ2FuZCBpdGVtLnRleHQgPT0gIiQkIiB0aGVuCiAgICAgIGluX2Rpc3BsYXlfbWF0aCA9IG5vdCBpbl9kaXNwbGF5X21hdGgKICAgIGVsc2UKICAgICAgaWYgaW5fZGlzcGxheV9tYXRoIHRoZW4KICAgICAgICBpZiBpdGVtLnQgPT0gJ1Jhd0lubGluZScgYW5kIGl0ZW0uZm9ybWF0ID09ICd0ZXgnIHRoZW4KICAgICAgICAgIGxvY2FsIG4gPSBwYW5kb2MuTWF0aCgnRGlzcGxheU1hdGgnLCAnXG4nIC4uIGl0ZW0udGV4dCAuLiAnXG4nKQogICAgICAgICAgdGFibGUuaW5zZXJ0KGNvbnRlbnQsIE1hdGgobikpCiAgICAgICAgZWxzZQogICAgICAgICAgdGFibGUuaW5zZXJ0KGNvbnRlbnQsIGl0ZW0pCiAgICAgICAgZW5kCiAgICAgIGVsc2UKICAgICAgICB0YWJsZS5pbnNlcnQoY29udGVudCwgaXRlbSkKICAgICAgZW5kCiAgICBlbmQKICBlbmQKICByZXR1cm4gY29udGVudAplbmQKCmZ1bmN0aW9uIFByb2Nlc3NJbnRlcm5hbExpbmtzKGVsZW1lbnRzKQogIGxvY2FsIGNvbnRlbnQgPSB7fQogIGxvY2FsIGluX3NlY3Rpb25fbGluayA9IGZhbHNlCiAgbG9jYWwgbGlua0Rlc2NyaXB0aW9uID0ge30KCiAgZm9yIF8sIGl0ZW0gaW4gcGFpcnMoZWxlbWVudHMpIGRvCiAgICBpZiBpdGVtLnQgPT0gJ1N0cicgYW5kIHN0cmluZy5zdGFydHNfd2l0aChpdGVtLnRleHQsICdbWyMnKSB0aGVuCiAgICAgIGluX3NlY3Rpb25fbGluayA9IHRydWUKICAgICAgdGFibGUuaW5zZXJ0KGxpbmtEZXNjcmlwdGlvbiwgc3RyaW5nLnN1YihpdGVtLnRleHQsIDQpKQogICAgZWxzZWlmIGluX3NlY3Rpb25fbGluayB0aGVuCiAgICAgIGlmIHN0cmluZy5lbmRzX3dpdGgoaXRlbS50ZXh0LCAnXV0nKSB0aGVuCiAgICAgICAgdGFibGUuaW5zZXJ0KGxpbmtEZXNjcmlwdGlvbiwgc3RyaW5nLnN1YihpdGVtLnRleHQsIDEsIC0zKSkKICAgICAgICBpbnNlcnRMaW5rKGNvbnRlbnQsIGxpbmtEZXNjcmlwdGlvbikKICAgICAgICBpbl9zZWN0aW9uX2xpbmsgPSBmYWxzZQogICAgICAgIGxpbmtEZXNjcmlwdGlvbiA9IHt9CiAgICAgIGVsc2UKICAgICAgICB0YWJsZS5pbnNlcnQobGlua0Rlc2NyaXB0aW9uLCBpdGVtLnRleHQpCiAgICAgIGVuZAogICAgZWxzZQogICAgICB0YWJsZS5pbnNlcnQoY29udGVudCwgaXRlbSkKICAgIGVuZAogIGVuZAogIHJldHVybiBjb250ZW50CmVuZAoKZnVuY3Rpb24gUGxhaW4oZWwpCiAgZWwuY29udGVudCA9IFByb2Nlc3NJbnRlcm5hbExpbmtzKGVsLmNvbnRlbnQpCiAgcmV0dXJuIGVsCmVuZAoKZnVuY3Rpb24gUGFuZG9jKGVsKQogIHJldHVybiBlbAplbmQK"),e=>e.charCodeAt(0)),ni=Object.freeze(Object.defineProperty({__proto__:null,default:li},Symbol.toStringTag,{value:"Module"})),ii=Uint8Array.from(atob("dHJhdmVyc2UgPSAndG9wZG93bicKCm1hdGhfYmxvY2tfdGV4dCA9IG5pbApmdW5jdGlvbiBwcm9jZXNzKGVsKQoKICAgLS0gTWF0aEJsb2NrIHN0YXJ0IG9yIGVuZAogICBpZiBlbC50ID09ICdTdHInIGFuZCBlbC50ZXh0ID09ICckJCcgdGhlbgogICAgIGlmIG1hdGhfYmxvY2tfdGV4dCA9PSBuaWwgdGhlbiAgICAgICAgICAgIC0tIHN0YXJ0CiAgICAgICBtYXRoX2Jsb2NrX3RleHQgPSAnJwogICAgIGVsc2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tIGVuZAogICAgICAgbG9jYWwgbWF0aF9ibG9jayA9IHBhbmRvYy5NYXRoKCdEaXNwbGF5TWF0aCcsICdcbicgLi4gbWF0aF9ibG9ja190ZXh0IC4uICdcbicpCiAgICAgICBtYXRoX2Jsb2NrX3RleHQgPSBuaWwKICAgICAgIHJldHVybiBtYXRoX2Jsb2NrCiAgICAgZW5kCiAgICAgcmV0dXJuIHt9CiAgIGVuZAoKICBpZiBtYXRoX2Jsb2NrX3RleHQgdGhlbgogICAgaWYgKGVsLnQgPT0gJ1Jhd0lubGluZScgb3IgZWwudCA9PSAnUmF3QmxvY2snKSBhbmQgZWwuZm9ybWF0ID09ICd0ZXgnIHRoZW4KICAgICAgbWF0aF9ibG9ja190ZXh0ID0gbWF0aF9ibG9ja190ZXh0IC4uIGVsLnRleHQKICAgICAgcmV0dXJuIHt9CiAgICBlbHNlaWYgZWwudCA9PSAnU3RyJyB0aGVuCiAgICAgIG1hdGhfYmxvY2tfdGV4dCA9IG1hdGhfYmxvY2tfdGV4dCAuLiBlbC50ZXh0CiAgICAgIHJldHVybiB7fQogICAgZWxzZWlmIGVsLnQgPT0gJ1NvZnRCcmVhaycgb3IgZWwudCA9PSAnQnVsbGV0TGlzdCcgdGhlbgogICAgICByZXR1cm4ge30KICAgIGVuZAogIGVuZAogIHJldHVybiBlbAplbmQKCmZ1bmN0aW9uIFJhd0lubGluZShlbCkgCiAgcmV0dXJuIHByb2Nlc3MoZWwpCmVuZAoKZnVuY3Rpb24gUmF3QmxvY2soZWwpIAogIHJldHVybiBwcm9jZXNzKGVsKQplbmQKCmZ1bmN0aW9uIFN0cihlbCkKICByZXR1cm4gcHJvY2VzcyhlbCkKZW5kCgpmdW5jdGlvbiBTb2Z0QnJlYWsoZWwpCiAgcmV0dXJuIHByb2Nlc3MoZWwpCmVuZAoKZnVuY3Rpb24gSGVhZGVyKGVsKQogIHJldHVybiBwcm9jZXNzKGVsKQplbmQKCmZ1bmN0aW9uIFBhcmEoZWwpCiAgcmV0dXJuIHByb2Nlc3MoZWwpCmVuZAoKZnVuY3Rpb24gUGxhaW4oZWwpCiAgcmV0dXJuIHByb2Nlc3MoZWwpCmVuZAoKZnVuY3Rpb24gQnVsbGV0TGlzdChlbCkKICByZXR1cm4gcHJvY2VzcyhlbCkKZW5kCgoKCgoKCg=="),e=>e.charCodeAt(0)),Ii=Object.freeze(Object.defineProperty({__proto__:null,default:ii},Symbol.toStringTag,{value:"Module"})),gi=Uint8Array.from(atob("CnJldHVybiB7CiAgICB7CiAgICAgICAgTWF0aCA9IGZ1bmN0aW9uIChlbGVtKQogICAgICAgICAgICBpZiBlbGVtLnRleHQ6ZmluZCgiXiVzKlxcYmVnaW57Iikgfj0gbmlsIHRoZW4KICAgICAgICAgICAgICAgIHJldHVybiBwYW5kb2MuUmF3SW5saW5lKCd0ZXgnLCBlbGVtLnRleHQpCiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHJldHVybiBlbGVtCiAgICAgICAgICAgIGVuZAogICAgICAgIGVuZCwKICAgIH0KfQo="),e=>e.charCodeAt(0)),ci=Object.freeze(Object.defineProperty({__proto__:null,default:gi},Symbol.toStringTag,{value:"Module"})),oi=Uint8Array.from(atob("b3MucGxhdGZvcm0gPSBuaWwKaWYgb3MucGxhdGZvcm0gPT0gbmlsIHRoZW4KICBsb2NhbCBsaWJFeHQgPSBwYWNrYWdlLmNwYXRoOm1hdGNoKCIlcFtcXHwvXT9cXC4lcCglYSspIikKICBpZiBsaWJFeHQgPT0gJ2RsbCcgdGhlbgogICAgb3MucGxhdGZvcm0gPSAiV2luZG93cyIKICAgIHJlcXVpcmUidXRmOF9maWxlbmFtZXMiCiAgZWxzZWlmIGxpYkV4dCA9PSAnc28nIHRoZW4KICAgIG9zLnBsYXRmb3JtID0gIkxpbnV4IgogIGVsc2VpZiBsaWJFeHQgPT0gJ2R5bGliJyB0aGVuCiAgICBvcy5wbGF0Zm9ybSA9ICJNYWNPUyIKICBlbmQKZW5kCgoKb3MuY29weSA9IGZ1bmN0aW9uKHNyYywgZGVzdCkKICBpZiBvcy5wbGF0Zm9ybSA9PSAiV2luZG93cyIgdGhlbgogICAgc3JjID0gc3RyaW5nLmdzdWIoc3JjLCAiLyIsICJcXCIpCiAgICBvcy5leGVjdXRlKCdjb3B5ICInIC4uIHNyYyAuLiAnIiAiJyAuLiBkZXN0IC4uICciJykKICBlbHNlCiAgICBvcy5leGVjdXRlKCdjcCAiJyAuLiBzcmMgLi4gJyIgIicgLi4gZGVzdCAuLiAnIicpCiAgZW5kCmVuZAoKb3MubWtkaXIgPSBmdW5jdGlvbihkaXIpCiAgaWYgb3MuZXhpc3RzKGRpcikgdGhlbgogICAgcmV0dXJuCiAgZW5kCiAgaWYgb3MucGxhdGZvcm0gPT0gIldpbmRvd3MiIHRoZW4KICAgIG9zLmV4ZWN1dGUoJ21rZGlyICInIC4uIGRpciAuLiAnIicpCiAgZWxzZQogICAgb3MuZXhlY3V0ZSgnbWtkaXIgLXAgIicgLi4gZGlyIC4uICciJykKICBlbmQKZW5kCgpvcy5leGlzdHMgPSBmdW5jdGlvbihwYXRoKQogIGlmIG9zLnBsYXRmb3JtID09ICJXaW5kb3dzIiB0aGVuCiAgICBwYXRoID0gc3RyaW5nLmdzdWIocGF0aCwgIi8iLCAiXFwiKQogICAgbG9jYWwgXywgXywgY29kZSA9IG9zLmV4ZWN1dGUoJ2lmIGV4aXN0ICInIC4uIHBhdGggLi4gJyIgKGV4aXQgMCkgZWxzZSAoZXhpdCAxKScpCiAgICByZXR1cm4gY29kZSA9PSAwCiAgZWxzZQogICAgbG9jYWwgXywgXywgY29kZSA9IG9zLmV4ZWN1dGUoJ3Rlc3QgLWUgIicgLi4gcGF0aCAuLiAnIicpCiAgICByZXR1cm4gY29kZSA9PSAwCiAgZW5kCmVuZAoKc3RyaW5nLnN0YXJ0c193aXRoID0gZnVuY3Rpb24oc3RyLCBzdGFydCkKICAgcmV0dXJuIHN0cjpzdWIoMSwgI3N0YXJ0KSA9PSBzdGFydAplbmQKCnN0cmluZy5lbmRzX3dpdGggPSBmdW5jdGlvbihzdHIsIGVuZGluZykKICAgcmV0dXJuIGVuZGluZyA9PSAiIiBvciBzdHI6c3ViKC0jZW5kaW5nKSA9PSBlbmRpbmcKZW5kCgoKcmV0dXJuIHsKICBvcyA9IG9zLAogIHN0cmluZyA9IHN0cmluZwp9"),e=>e.charCodeAt(0)),si=Object.freeze(Object.defineProperty({__proto__:null,default:oi},Symbol.toStringTag,{value:"Module"})),Ci=Uint8Array.from(atob("bG9jYWwgZnVuY3Rpb24gZW5jb2RlIChzdHIpCiAgc3RyID0gc3RyaW5nLmdzdWIgKHN0ciwgIihbXjAtOWEtekEtWiAhJygpKi5ffi1dKSIsIC0tIGxvY2FsZSBpbmRlcGVuZGVudAogICAgZnVuY3Rpb24gKGMpIHJldHVybiBzdHJpbmcuZm9ybWF0ICgiJSUlMDJYIiwgc3RyaW5nLmJ5dGUoYykpIGVuZCkKICBzdHIgPSBzdHJpbmcuZ3N1YiAoc3RyLCAiICIsICIlJTIwIikKICByZXR1cm4gc3RyCiBlbmQKCgpsb2NhbCBmdW5jdGlvbiBkZWNvZGUgKHN0cikKICBzdHIgPSBzdHJpbmcuZ3N1YiAoc3RyLCAiJSUyMCIsICIgIikKICBzdHIgPSBzdHJpbmcuZ3N1YiAoc3RyLCAiJSUoJXgleCkiLCBmdW5jdGlvbihoKSByZXR1cm4gc3RyaW5nLmNoYXIodG9udW1iZXIoaCwxNikpIGVuZCkKICByZXR1cm4gc3RyCmVuZAoKcmV0dXJuIHsKICBlbmNvZGUgPSBlbmNvZGUsCiAgZGVjb2RlID0gZGVjb2RlCn0="),e=>e.charCodeAt(0)),Vi=Object.freeze(Object.defineProperty({__proto__:null,default:Ci},Symbol.toStringTag,{value:"Module"})),ai=Uint8Array.from(atob(""),e=>e.charCodeAt(0)),di=Object.freeze(Object.defineProperty({__proto__:null,default:ai},Symbol.toStringTag,{value:"Module"})),Ut={Markdown:{name:"Markdown",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/markdown.lua" -s -o "${outputPath}" -t commonmark_x-attributes',extension:".md"},"Markdown (Hugo)":{name:"Markdown (Hugo)",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/markdown+hugo.lua" -s -o "${outputPath}" -t commonmark_x-attributes',extension:".md"},Html:{name:"Html",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/math_block.lua" --embed-resources --standalone --metadata title="${currentFileName}" -s -o "${outputPath}" -t html',customArguments:'--mathjax="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg-full.js"',extension:".html"},TextBundle:{name:"TextBundle",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/markdown.lua" -V media_dir="${outputDir}/${outputFileName}.textbundle/assets" -s -o "${outputDir}/${outputFileName}.textbundle/text.md" -t commonmark_x-attributes',extension:".md"},Typst:{name:"Typst",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/markdown.lua" -s -o "${outputPath}" -t typst',extension:".typ"},PDF:{name:"PDF",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/pdf.lua" --embed-resources --standalone --metadata title="${currentFileName}" -s -o "${outputPath}" -t pdf',customArguments:"--pdf-engine=typst",extension:".pdf"},"Word (.docx)":{name:"Word (.docx)",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t docx',extension:".docx"},OpenOffice:{name:"OpenOffice",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t odt',extension:".odt"},RTF:{name:"RTF",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t rtf',extension:".rtf"},Epub:{name:"Epub",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t epub',extension:".epub"},Latex:{name:"Latex",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t latex',extension:".latex"},"Latex (export with images)":{name:"Latex",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t latex --extract-media "${outputPath}/images/"',extension:".latex"},"Media Wiki":{name:"Media Wiki",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t mediawiki',extension:".mediawiki"},reStructuredText:{name:"reStructuredText",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t rst',extension:".rst"},Textile:{name:"Textile",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t textile',extension:".textile"},OPML:{name:"OPML",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t opml',extension:".opml"},"Bibliography (.bib)":{name:"Bibliography",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/citefilter.lua" -o "${outputPath}" --to=bibtex "${currentPath}"',extension:".bib"},Custom:{name:"Custom",type:"custom",command:"your command",targetFileExtensions:".ext"}};function Ke(e,t,l){return typeof t=="string"&&t.trim()===""&&(t=void 0),l??(l=tt.platform),{...e??{},[l]:t}}function fe(e){return(e??{})[tt.platform]}function H(e,...t){return function(...l){const n=l[l.length-1]||{},i=[e[0]];return t.forEach(function(I,c){const g=Number.isInteger(I)?l[I]:n[I];i.push(g,e[c+1])}),i.join("")}}function $t(e,t){return t=t??{},new Promise((l,n)=>{Pn.exec(e,t,(i,I,c)=>{if(i){n(i);return}if(c&&c!==""){n(c);return}l(I)})})}function Xl(e,t={}){const l=Object.keys(t).filter(ri),n=l.map(i=>t[i]);return new Function(...l,`{ return \`${e.replaceAll("\\","\\\\")}\` }`).bind(t)(...n)}const ri=e=>{if(typeof e!="string"||e.trim()!==e)return!1;try{new Function(e,"var "+e)}catch{return!1}return!0},Ai=()=>{let e={};e=Ke(e,{PATH:"/usr/local/bin:/Library/TeX/texbin:${PATH}"},"darwin");const t=["aix","android","darwin","freebsd","haiku","linux","openbsd","sunos","win32","cygwin","netbsd"];for(const l of t)e=Ke(e,{...e[l]??{},HOME:"${HOME}"},l);return e},ve={items:Object.values(Ut).filter(e=>e.type!=="custom"),pandocPath:void 0,defaultExportDirectoryMode:"Auto",openExportedFile:!0,env:Ai()};function sn(e){var t;return e.type==="pandoc"?e.extension:e.type==="custom"?(t=e.targetFileExtensions)==null?void 0:t.split(",")[0]:""}const Zi=(e,t)=>e===t,Ne=Symbol("solid-proxy"),_t=Symbol("solid-track"),Ui=Symbol("solid-dev-component"),Rt={equals:Zi};let Cn=Un;const Ee=1,ht=2,Vn={owned:null,cleanups:null,context:null,owner:null};var te=null;let Qt=null,q=null,Ie=null,Je=null,Jt=0;function lt(e,t){const l=q,n=te,i=e.length===0,I=i?Vn:{owned:null,cleanups:null,context:null,owner:t===void 0?n:t},c=i?e:()=>e(()=>$(()=>ut(I)));te=I,q=null;try{return Pe(c,!0)}finally{q=l,te=n}}function se(e,t){t=t?Object.assign({},Rt,t):Rt;const l={value:e,observers:null,observerSlots:null,comparator:t.equals||void 0},n=i=>(typeof i=="function"&&(i=i(l.value)),Zn(l,i));return[An.bind(l),n]}function ie(e,t,l){const n=cl(e,t,!1,Ee);ot(n)}function be(e,t,l){Cn=hi;const n=cl(e,t,!1,Ee);(!l||!l.render)&&(n.user=!0),Je?Je.push(n):ot(n)}function ne(e,t,l){l=l?Object.assign({},Rt,l):Rt;const n=cl(e,t,!0,0);return n.observers=null,n.observerSlots=null,n.comparator=l.equals||void 0,ot(n),An.bind(n)}function St(e){return Pe(e,!1)}function $(e){if(q===null)return e();const t=q;q=null;try{return e()}finally{q=t}}function an(e){be(()=>$(e))}function ct(e){return te===null||(te.cleanups===null?te.cleanups=[e]:te.cleanups.push(e)),e}function dn(){return q}function Si(e,t){const l=Symbol("context");return{id:l,Provider:Ni(l),defaultValue:e}}function mi(e){let t;return(t=Wn(te,e.id))!==void 0?t:e.defaultValue}function rn(e){const t=ne(e),l=ne(()=>el(t()));return l.toArray=()=>{const n=l();return Array.isArray(n)?n:n!=null?[n]:[]},l}function An(){if(this.sources&&this.state)if(this.state===Ee)ot(this);else{const e=Ie;Ie=null,Pe(()=>Xt(this),!1),Ie=e}if(q){const e=this.observers?this.observers.length:0;q.sources?(q.sources.push(this),q.sourceSlots.push(e)):(q.sources=[this],q.sourceSlots=[e]),this.observers?(this.observers.push(q),this.observerSlots.push(q.sources.length-1)):(this.observers=[q],this.observerSlots=[q.sources.length-1])}return this.value}function Zn(e,t,l){let n=e.value;return(!e.comparator||!e.comparator(n,t))&&(e.value=t,e.observers&&e.observers.length&&Pe(()=>{for(let i=0;i<e.observers.length;i+=1){const I=e.observers[i],c=Qt&&Qt.running;c&&Qt.disposed.has(I),(c?!I.tState:!I.state)&&(I.pure?Ie.push(I):Je.push(I),I.observers&&Sn(I)),c||(I.state=Ee)}if(Ie.length>1e6)throw Ie=[],new Error},!1)),t}function ot(e){if(!e.fn)return;ut(e);const t=te,l=q,n=Jt;q=te=e,Wi(e,e.value,n),q=l,te=t}function Wi(e,t,l){let n;try{n=e.fn(t)}catch(i){return e.pure&&(e.state=Ee,e.owned&&e.owned.forEach(ut),e.owned=null),e.updatedAt=l+1,mn(i)}(!e.updatedAt||e.updatedAt<=l)&&(e.updatedAt!=null&&"observers"in e?Zn(e,n):e.value=n,e.updatedAt=l)}function cl(e,t,l,n=Ee,i){const I={fn:e,state:n,updatedAt:null,owned:null,sources:null,sourceSlots:null,cleanups:null,value:t,owner:te,context:null,pure:l};return te===null||te!==Vn&&(te.owned?te.owned.push(I):te.owned=[I]),I}function Nt(e){if(e.state===0)return;if(e.state===ht)return Xt(e);if(e.suspense&&$(e.suspense.inFallback))return e.suspense.effects.push(e);const t=[e];for(;(e=e.owner)&&(!e.updatedAt||e.updatedAt<Jt);)e.state&&t.push(e);for(let l=t.length-1;l>=0;l--)if(e=t[l],e.state===Ee)ot(e);else if(e.state===ht){const n=Ie;Ie=null,Pe(()=>Xt(e,t[0]),!1),Ie=n}}function Pe(e,t){if(Ie)return e();let l=!1;t||(Ie=[]),Je?l=!0:Je=[],Jt++;try{const n=e();return Ri(l),n}catch(n){l||(Je=null),Ie=null,mn(n)}}function Ri(e){if(Ie&&(Un(Ie),Ie=null),e)return;const t=Je;Je=null,t.length&&Pe(()=>Cn(t),!1)}function Un(e){for(let t=0;t<e.length;t++)Nt(e[t])}function hi(e){let t,l=0;for(t=0;t<e.length;t++){const n=e[t];n.user?e[l++]=n:Nt(n)}for(t=0;t<l;t++)Nt(e[t])}function Xt(e,t){e.state=0;for(let l=0;l<e.sources.length;l+=1){const n=e.sources[l];if(n.sources){const i=n.state;i===Ee?n!==t&&(!n.updatedAt||n.updatedAt<Jt)&&Nt(n):i===ht&&Xt(n,t)}}}function Sn(e){for(let t=0;t<e.observers.length;t+=1){const l=e.observers[t];l.state||(l.state=ht,l.pure?Ie.push(l):Je.push(l),l.observers&&Sn(l))}}function ut(e){let t;if(e.sources)for(;e.sources.length;){const l=e.sources.pop(),n=e.sourceSlots.pop(),i=l.observers;if(i&&i.length){const I=i.pop(),c=l.observerSlots.pop();n<i.length&&(I.sourceSlots[c]=n,i[n]=I,l.observerSlots[n]=c)}}if(e.owned){for(t=e.owned.length-1;t>=0;t--)ut(e.owned[t]);e.owned=null}if(e.cleanups){for(t=e.cleanups.length-1;t>=0;t--)e.cleanups[t]();e.cleanups=null}e.state=0,e.context=null}function mn(e){throw e}function Wn(e,t){return e?e.context&&e.context[t]!==void 0?e.context[t]:Wn(e.owner,t):void 0}function el(e){if(typeof e=="function"&&!e.length)return el(e());if(Array.isArray(e)){const t=[];for(let l=0;l<e.length;l++){const n=el(e[l]);Array.isArray(n)?t.push.apply(t,n):t.push(n)}return t}return e}function Ni(e,t){return function(n){let i;return ie(()=>i=$(()=>(te.context={[e]:n.value},rn(()=>n.children))),void 0),i}}const Xi=Symbol("fallback");function Fl(e){for(let t=0;t<e.length;t++)e[t]()}function Fi(e,t,l={}){let n=[],i=[],I=[],c=0,g=t.length>1?[]:null;return ct(()=>Fl(I)),()=>{let s=e()||[],r,V;return s[_t],$(()=>{let T=s.length,R,O,D,d,w,x,B,P,G;if(T===0)c!==0&&(Fl(I),I=[],n=[],i=[],c=0,g&&(g=[])),l.fallback&&(n=[Xi],i[0]=lt(Ce=>(I[0]=Ce,l.fallback())),c=1);else if(c===0){for(i=new Array(T),V=0;V<T;V++)n[V]=s[V],i[V]=lt(Z);c=T}else{for(D=new Array(T),d=new Array(T),g&&(w=new Array(T)),x=0,B=Math.min(c,T);x<B&&n[x]===s[x];x++);for(B=c-1,P=T-1;B>=x&&P>=x&&n[B]===s[P];B--,P--)D[P]=i[B],d[P]=I[B],g&&(w[P]=g[B]);for(R=new Map,O=new Array(P+1),V=P;V>=x;V--)G=s[V],r=R.get(G),O[V]=r===void 0?-1:r,R.set(G,V);for(r=x;r<=B;r++)G=n[r],V=R.get(G),V!==void 0&&V!==-1?(D[V]=i[r],d[V]=I[r],g&&(w[V]=g[r]),V=O[V],R.set(G,V)):I[r]();for(V=x;V<T;V++)V in D?(i[V]=D[V],I[V]=d[V],g&&(g[V]=w[V],g[V](V))):i[V]=lt(Z);i=i.slice(0,c=T),n=s.slice(0)}return i});function Z(T){if(I[V]=T,g){const[R,O]=se(V);return g[V]=O,t(s[V],R)}return t(s[V])}}}function U(e,t){return $(()=>e(t||{}))}function at(){return!0}const pl={get(e,t,l){return t===Ne?l:e.get(t)},has(e,t){return t===Ne?!0:e.has(t)},set:at,deleteProperty:at,getOwnPropertyDescriptor(e,t){return{configurable:!0,enumerable:!0,get(){return e.get(t)},set:at,deleteProperty:at}},ownKeys(e){return e.keys()}};function pi(e,...t){if(Ne in e){const i=new Set(t.length>1?t.flat():t[0]),I=t.map(c=>new Proxy({get(g){return c.includes(g)?e[g]:void 0},has(g){return c.includes(g)&&g in e},keys(){return c.filter(g=>g in e)}},pl));return I.push(new Proxy({get(c){return i.has(c)?void 0:e[c]},has(c){return i.has(c)?!1:c in e},keys(){return Object.keys(e).filter(c=>!i.has(c))}},pl)),I}const l={},n=t.map(()=>({}));for(const i of Object.getOwnPropertyNames(e)){const I=Object.getOwnPropertyDescriptor(e,i),c=!I.get&&!I.set&&I.enumerable&&I.writable&&I.configurable;let g=!1,s=0;for(const r of t)r.includes(i)&&(g=!0,c?n[s][i]=I.value:Object.defineProperty(n[s],i,I)),++s;g||(c?l[i]=I.value:Object.defineProperty(l,i,I))}return[...n,l]}const Rn=e=>`Stale read from <${e}>.`;function hn(e){const t="fallback"in e&&{fallback:()=>e.fallback};return ne(Fi(()=>e.each,e.children,t||void 0))}function mt(e){const t=e.keyed,l=ne(()=>e.when,void 0,{equals:(n,i)=>t?n===i:!n==!i});return ne(()=>{const n=l();if(n){const i=e.children;return typeof i=="function"&&i.length>0?$(()=>i(t?n:()=>{if(!$(l))throw Rn("Show");return e.when})):i}return e.fallback},void 0,void 0)}function Ti(e){let t=!1;const l=(I,c)=>I[0]===c[0]&&(t?I[1]===c[1]:!I[1]==!c[1])&&I[2]===c[2],n=rn(()=>e.children),i=ne(()=>{let I=n();Array.isArray(I)||(I=[I]);for(let c=0;c<I.length;c++){const g=I[c].when;if(g)return t=!!I[c].keyed,[c,g,I[c]]}return[-1]},void 0,{equals:l});return ne(()=>{const[I,c,g]=i();if(I<0)return e.fallback;const s=g.children;return typeof s=="function"&&s.length>0?$(()=>s(t?c:()=>{if($(i)[0]!==I)throw Rn("Match");return g.when})):s},void 0,void 0)}function Tl(e){return e}const Ji=["allowfullscreen","async","autofocus","autoplay","checked","controls","default","disabled","formnovalidate","hidden","indeterminate","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","seamless","selected"],ui=new Set(["className","value","readOnly","formNoValidate","isMap","noModule","playsInline",...Ji]),fi=new Set(["innerHTML","textContent","innerText","children"]),bi=Object.assign(Object.create(null),{className:"class",htmlFor:"for"}),Ei=Object.assign(Object.create(null),{class:"className",formnovalidate:{$:"formNoValidate",BUTTON:1,INPUT:1},ismap:{$:"isMap",IMG:1},nomodule:{$:"noModule",SCRIPT:1},playsinline:{$:"playsInline",VIDEO:1},readonly:{$:"readOnly",INPUT:1,TEXTAREA:1}});function ki(e,t){const l=Ei[e];return typeof l=="object"?l[t]?l.$:void 0:l}const Yi=new Set(["beforeinput","click","dblclick","contextmenu","focusin","focusout","input","keydown","keyup","mousedown","mousemove","mouseout","mouseover","mouseup","pointerdown","pointermove","pointerout","pointerover","pointerup","touchend","touchmove","touchstart"]),yi=new Set(["altGlyph","altGlyphDef","altGlyphItem","animate","animateColor","animateMotion","animateTransform","circle","clipPath","color-profile","cursor","defs","desc","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","filter","font","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignObject","g","glyph","glyphRef","hkern","image","line","linearGradient","marker","mask","metadata","missing-glyph","mpath","path","pattern","polygon","polyline","radialGradient","rect","set","stop","svg","switch","symbol","text","textPath","tref","tspan","use","view","vkern"]),Qi={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"};function xi(e,t,l){let n=l.length,i=t.length,I=n,c=0,g=0,s=t[i-1].nextSibling,r=null;for(;c<i||g<I;){if(t[c]===l[g]){c++,g++;continue}for(;t[i-1]===l[I-1];)i--,I--;if(i===c){const V=I<n?g?l[g-1].nextSibling:l[I-g]:s;for(;g<I;)e.insertBefore(l[g++],V)}else if(I===g)for(;c<i;)(!r||!r.has(t[c]))&&t[c].remove(),c++;else if(t[c]===l[I-1]&&l[g]===t[i-1]){const V=t[--i].nextSibling;e.insertBefore(l[g++],t[c++].nextSibling),e.insertBefore(l[--I],V),t[i]=l[I]}else{if(!r){r=new Map;let Z=g;for(;Z<I;)r.set(l[Z],Z++)}const V=r.get(t[c]);if(V!=null)if(g<V&&V<I){let Z=c,T=1,R;for(;++Z<i&&Z<I&&!((R=r.get(t[Z]))==null||R!==V+T);)T++;if(T>V-g){const O=t[c];for(;g<V;)e.insertBefore(l[g++],O)}else e.replaceChild(l[g++],t[c++])}else c++;else t[c++].remove()}}}const Jl="_$DX_DELEGATE";function Ue(e,t,l){let n;const i=()=>{const c=document.createElement("template");return c.innerHTML=e,l?c.content.firstChild.firstChild:c.content.firstChild},I=t?()=>$(()=>document.importNode(n||(n=i()),!0)):()=>(n||(n=i())).cloneNode(!0);return I.cloneNode=I,I}function ol(e,t=window.document){const l=t[Jl]||(t[Jl]=new Set);for(let n=0,i=e.length;n<i;n++){const I=e[n];l.has(I)||(l.add(I),t.addEventListener(I,zi))}}function ue(e,t,l){l==null?e.removeAttribute(t):e.setAttribute(t,l)}function Gi(e,t,l,n){n==null?e.removeAttributeNS(t,l):e.setAttributeNS(t,l,n)}function Nn(e,t){t==null?e.removeAttribute("class"):e.className=t}function sl(e,t,l,n){if(n)Array.isArray(l)?(e[`$$${t}`]=l[0],e[`$$${t}Data`]=l[1]):e[`$$${t}`]=l;else if(Array.isArray(l)){const i=l[0];e.addEventListener(t,l[0]=I=>i.call(e,l[1],I))}else e.addEventListener(t,l)}function Mi(e,t,l={}){const n=Object.keys(t||{}),i=Object.keys(l);let I,c;for(I=0,c=i.length;I<c;I++){const g=i[I];!g||g==="undefined"||t[g]||(ul(e,g,!1),delete l[g])}for(I=0,c=n.length;I<c;I++){const g=n[I],s=!!t[g];!g||g==="undefined"||l[g]===s||!s||(ul(e,g,!0),l[g]=s)}return l}function Cl(e,t,l){if(!t)return l?ue(e,"style"):t;const n=e.style;if(typeof t=="string")return n.cssText=t;typeof l=="string"&&(n.cssText=l=void 0),l||(l={}),t||(t={});let i,I;for(I in l)t[I]==null&&n.removeProperty(I),delete l[I];for(I in t)i=t[I],i!==l[I]&&(n.setProperty(I,i),l[I]=i);return l}function Bi(e,t={},l,n){const i={};return n||ie(()=>i.children=Le(e,t.children,i.children)),ie(()=>t.ref&&t.ref(e)),ie(()=>ji(e,t,l,!0,i,!0)),i}function Xn(e,t,l){return $(()=>e(t,l))}function oe(e,t,l,n){if(l!==void 0&&!n&&(n=[]),typeof t!="function")return Le(e,t,n,l);ie(i=>Le(e,t(),i,l),n)}function ji(e,t,l,n,i={},I=!1){t||(t={});for(const c in i)if(!(c in t)){if(c==="children")continue;i[c]=fl(e,c,null,i[c],l,I)}for(const c in t){if(c==="children"){n||Le(e,t.children);continue}const g=t[c];i[c]=fl(e,c,g,i[c],l,I)}}function Ki(e){return e.toLowerCase().replace(/-([a-z])/g,(t,l)=>l.toUpperCase())}function ul(e,t,l){const n=t.trim().split(/\s+/);for(let i=0,I=n.length;i<I;i++)e.classList.toggle(n[i],l)}function fl(e,t,l,n,i,I){let c,g,s,r,V;if(t==="style")return Cl(e,l,n);if(t==="classList")return Mi(e,l,n);if(l===n)return n;if(t==="ref")I||l(e);else if(t.slice(0,3)==="on:"){const Z=t.slice(3);n&&e.removeEventListener(Z,n),l&&e.addEventListener(Z,l)}else if(t.slice(0,10)==="oncapture:"){const Z=t.slice(10);n&&e.removeEventListener(Z,n,!0),l&&e.addEventListener(Z,l,!0)}else if(t.slice(0,2)==="on"){const Z=t.slice(2).toLowerCase(),T=Yi.has(Z);if(!T&&n){const R=Array.isArray(n)?n[0]:n;e.removeEventListener(Z,R)}(T||l)&&(sl(e,Z,l,T),T&&ol([Z]))}else if(t.slice(0,5)==="attr:")ue(e,t.slice(5),l);else if((V=t.slice(0,5)==="prop:")||(s=fi.has(t))||!i&&((r=ki(t,e.tagName))||(g=ui.has(t)))||(c=e.nodeName.includes("-")))V&&(t=t.slice(5),g=!0),t==="class"||t==="className"?Nn(e,l):c&&!g&&!s?e[Ki(t)]=l:e[r||t]=l;else{const Z=i&&t.indexOf(":")>-1&&Qi[t.split(":")[0]];Z?Gi(e,Z,t,l):ue(e,bi[t]||t,l)}return l}function zi(e){const t=`$$${e.type}`;let l=e.composedPath&&e.composedPath()[0]||e.target;for(e.target!==l&&Object.defineProperty(e,"target",{configurable:!0,value:l}),Object.defineProperty(e,"currentTarget",{configurable:!0,get(){return l||document}});l;){const n=l[t];if(n&&!l.disabled){const i=l[`${t}Data`];if(i!==void 0?n.call(l,i,e):n.call(l,e),e.cancelBubble)return}l=l._$host||l.parentNode||l.host}}function Le(e,t,l,n,i){for(;typeof l=="function";)l=l();if(t===l)return l;const I=typeof t,c=n!==void 0;if(e=c&&l[0]&&l[0].parentNode||e,I==="string"||I==="number")if(I==="number"&&(t=t.toString()),c){let g=l[0];g&&g.nodeType===3?g.data=t:g=document.createTextNode(t),l=Ge(e,l,n,g)}else l!==""&&typeof l=="string"?l=e.firstChild.data=t:l=e.textContent=t;else if(t==null||I==="boolean")l=Ge(e,l,n);else{if(I==="function")return ie(()=>{let g=t();for(;typeof g=="function";)g=g();l=Le(e,g,l,n)}),()=>l;if(Array.isArray(t)){const g=[],s=l&&Array.isArray(l);if(tl(g,t,l,i))return ie(()=>l=Le(e,g,l,n,!0)),()=>l;if(g.length===0){if(l=Ge(e,l,n),c)return l}else s?l.length===0?bl(e,g,n):xi(e,l,g):(l&&Ge(e),bl(e,g));l=g}else if(t.nodeType){if(Array.isArray(l)){if(c)return l=Ge(e,l,n,t);Ge(e,l,null,t)}else l==null||l===""||!e.firstChild?e.appendChild(t):e.replaceChild(t,e.firstChild);l=t}else console.warn("Unrecognized value. Skipped inserting",t)}return l}function tl(e,t,l,n){let i=!1;for(let I=0,c=t.length;I<c;I++){let g=t[I],s=l&&l[I],r;if(!(g==null||g===!0||g===!1))if((r=typeof g)=="object"&&g.nodeType)e.push(g);else if(Array.isArray(g))i=tl(e,g,s)||i;else if(r==="function")if(n){for(;typeof g=="function";)g=g();i=tl(e,Array.isArray(g)?g:[g],Array.isArray(s)?s:[s])||i}else e.push(g),i=!0;else{const V=String(g);s&&s.nodeType===3&&s.data===V?e.push(s):e.push(document.createTextNode(V))}}return i}function bl(e,t,l=null){for(let n=0,i=t.length;n<i;n++)e.insertBefore(t[n],l)}function Ge(e,t,l,n){if(l===void 0)return e.textContent="";const i=n||document.createTextNode("");if(t.length){let I=!1;for(let c=t.length-1;c>=0;c--){const g=t[c];if(i!==g){const s=g.parentNode===e;!I&&!c?s?e.replaceChild(i,g):e.insertBefore(i,l):s&&g.remove()}else I=!0}}else e.insertBefore(i,l);return[i]}const Li="http://www.w3.org/2000/svg";function wi(e,t=!1){return t?document.createElementNS(Li,e):document.createElement(e)}function Oi(e){const[t,l]=pi(e,["component"]),n=ne(()=>t.component);return ne(()=>{const i=n();switch(typeof i){case"function":return Object.assign(i,{[Ui]:!0}),$(()=>i(l));case"string":const I=yi.has(i),c=wi(i,I);return Bi(c,l,I),c}})}/**
 * @license
 * Copyright (c) 2016, Contributors
 * SPDX-License-Identifier: ISC
 */function _e(e){if(e!==e.toLowerCase()&&e!==e.toUpperCase()||(e=e.toLowerCase()),e.indexOf("-")===-1&&e.indexOf("_")===-1)return e;{let l="",n=!1;const i=e.match(/^-+/);for(let I=i?i[0].length:0;I<e.length;I++){let c=e.charAt(I);n&&(n=!1,c=c.toUpperCase()),I!==0&&(c==="-"||c==="_")?n=!0:c!=="-"&&c!=="_"&&(l+=c)}return l}}function Fn(e,t){const l=e.toLowerCase();t=t||"-";let n="";for(let i=0;i<e.length;i++){const I=l.charAt(i),c=e.charAt(i);I!==c&&i>0?n+=`${t}${l.charAt(i)}`:n+=c}return n}function pn(e){return e==null?!1:typeof e=="number"||/^0x[0-9a-f]+$/i.test(e)?!0:/^0[^.]/.test(e)?!1:/^[-]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(e)}/**
 * @license
 * Copyright (c) 2016, Contributors
 * SPDX-License-Identifier: ISC
 */function Di(e){if(Array.isArray(e))return e.map(c=>typeof c!="string"?c+"":c);e=e.trim();let t=0,l=null,n=null,i=null;const I=[];for(let c=0;c<e.length;c++){if(l=n,n=e.charAt(c),n===" "&&!i){l!==" "&&t++;continue}n===i?i=null:(n==="'"||n==='"')&&!i&&(i=n),I[t]||(I[t]=""),I[t]+=n}return I}/**
 * @license
 * Copyright (c) 2016, Contributors
 * SPDX-License-Identifier: ISC
 */var re;(function(e){e.BOOLEAN="boolean",e.STRING="string",e.NUMBER="number",e.ARRAY="array"})(re||(re={}));/**
 * @license
 * Copyright (c) 2016, Contributors
 * SPDX-License-Identifier: ISC
 */let Fe;class Pi{constructor(t){Fe=t}parse(t,l){const n=Object.assign({alias:void 0,array:void 0,boolean:void 0,config:void 0,configObjects:void 0,configuration:void 0,coerce:void 0,count:void 0,default:void 0,envPrefix:void 0,narg:void 0,normalize:void 0,string:void 0,number:void 0,__:void 0,key:void 0},l),i=Di(t),I=typeof t=="string",c=Hi(Object.assign(Object.create(null),n.alias)),g=Object.assign({"boolean-negation":!0,"camel-case-expansion":!0,"combine-arrays":!1,"dot-notation":!0,"duplicate-arguments-array":!0,"flatten-duplicate-arrays":!0,"greedy-arrays":!0,"halt-at-non-option":!1,"nargs-eats-options":!1,"negation-prefix":"no-","parse-numbers":!0,"parse-positional-numbers":!0,"populate--":!1,"set-placeholder-key":!1,"short-option-groups":!0,"strip-aliased":!1,"strip-dashed":!1,"unknown-options-as-args":!1},n.configuration),s=Object.assign(Object.create(null),n.default),r=n.configObjects||[],V=n.envPrefix,Z=g["populate--"],T=Z?"--":"_",R=Object.create(null),O=Object.create(null),D=n.__||Fe.format,d={aliases:Object.create(null),arrays:Object.create(null),bools:Object.create(null),strings:Object.create(null),numbers:Object.create(null),counts:Object.create(null),normalize:Object.create(null),configs:Object.create(null),nargs:Object.create(null),coercions:Object.create(null),keys:[]},w=/^-([0-9]+(\.[0-9]+)?|\.[0-9]+)$/,x=new RegExp("^--"+g["negation-prefix"]+"(.+)");[].concat(n.array||[]).filter(Boolean).forEach(function(o){const a=typeof o=="object"?o.key:o,W=Object.keys(o).map(function(A){return{boolean:"bools",string:"strings",number:"numbers"}[A]}).filter(Boolean).pop();W&&(d[W][a]=!0),d.arrays[a]=!0,d.keys.push(a)}),[].concat(n.boolean||[]).filter(Boolean).forEach(function(o){d.bools[o]=!0,d.keys.push(o)}),[].concat(n.string||[]).filter(Boolean).forEach(function(o){d.strings[o]=!0,d.keys.push(o)}),[].concat(n.number||[]).filter(Boolean).forEach(function(o){d.numbers[o]=!0,d.keys.push(o)}),[].concat(n.count||[]).filter(Boolean).forEach(function(o){d.counts[o]=!0,d.keys.push(o)}),[].concat(n.normalize||[]).filter(Boolean).forEach(function(o){d.normalize[o]=!0,d.keys.push(o)}),typeof n.narg=="object"&&Object.entries(n.narg).forEach(([o,a])=>{typeof a=="number"&&(d.nargs[o]=a,d.keys.push(o))}),typeof n.coerce=="object"&&Object.entries(n.coerce).forEach(([o,a])=>{typeof a=="function"&&(d.coercions[o]=a,d.keys.push(o))}),typeof n.config<"u"&&(Array.isArray(n.config)||typeof n.config=="string"?[].concat(n.config).filter(Boolean).forEach(function(o){d.configs[o]=!0}):typeof n.config=="object"&&Object.entries(n.config).forEach(([o,a])=>{(typeof a=="boolean"||typeof a=="function")&&(d.configs[o]=a)})),v(n.key,c,n.default,d.arrays),Object.keys(s).forEach(function(o){(d.aliases[o]||[]).forEach(function(a){s[a]=s[o]})});let B=null;Dn();let P=[];const G=Object.assign(Object.create(null),{_:[]}),Ce={};for(let o=0;o<i.length;o++){const a=i[o],W=a.replace(/^-{3,}/,"---");let A,C,J,p,f,_;if(a!=="--"&&/^-/.test(a)&&Vt(a))X(a);else if(W.match(/^---+(=|$)/)){X(a);continue}else if(a.match(/^--.+=/)||!g["short-option-groups"]&&a.match(/^-.+=/))p=a.match(/^--?([^=]+)=([\s\S]*)$/),p!==null&&Array.isArray(p)&&p.length>=3&&(F(p[1],d.arrays)?o=m(o,p[1],i,p[2]):F(p[1],d.nargs)!==!1?o=Y(o,p[1],i,p[2]):h(p[1],p[2],!0));else if(a.match(x)&&g["boolean-negation"])p=a.match(x),p!==null&&Array.isArray(p)&&p.length>=2&&(C=p[1],h(C,F(C,d.arrays)?[!1]:!1));else if(a.match(/^--.+/)||!g["short-option-groups"]&&a.match(/^-[^-]+/))p=a.match(/^--?(.+)/),p!==null&&Array.isArray(p)&&p.length>=2&&(C=p[1],F(C,d.arrays)?o=m(o,C,i):F(C,d.nargs)!==!1?o=Y(o,C,i):(f=i[o+1],f!==void 0&&(!f.match(/^-/)||f.match(w))&&!F(C,d.bools)&&!F(C,d.counts)||/^(true|false)$/.test(f)?(h(C,f),o++):h(C,xe(C))));else if(a.match(/^-.\..+=/))p=a.match(/^-([^=]+)=([\s\S]*)$/),p!==null&&Array.isArray(p)&&p.length>=3&&h(p[1],p[2]);else if(a.match(/^-.\..+/)&&!a.match(w))f=i[o+1],p=a.match(/^-(.\..+)/),p!==null&&Array.isArray(p)&&p.length>=2&&(C=p[1],f!==void 0&&!f.match(/^-/)&&!F(C,d.bools)&&!F(C,d.counts)?(h(C,f),o++):h(C,xe(C)));else if(a.match(/^-[^-]+/)&&!a.match(w)){J=a.slice(1,-1).split(""),A=!1;for(let ge=0;ge<J.length;ge++){if(f=a.slice(ge+2),J[ge+1]&&J[ge+1]==="="){_=a.slice(ge+3),C=J[ge],F(C,d.arrays)?o=m(o,C,i,_):F(C,d.nargs)!==!1?o=Y(o,C,i,_):h(C,_),A=!0;break}if(f==="-"){h(J[ge],f);continue}if(/[A-Za-z]/.test(J[ge])&&/^-?\d+(\.\d*)?(e-?\d+)?$/.test(f)&&F(f,d.bools)===!1){h(J[ge],f),A=!0;break}if(J[ge+1]&&J[ge+1].match(/\W/)){h(J[ge],f),A=!0;break}else h(J[ge],xe(J[ge]))}C=a.slice(-1)[0],!A&&C!=="-"&&(F(C,d.arrays)?o=m(o,C,i):F(C,d.nargs)!==!1?o=Y(o,C,i):(f=i[o+1],f!==void 0&&(!/^(-|--)[^-]/.test(f)||f.match(w))&&!F(C,d.bools)&&!F(C,d.counts)||/^(true|false)$/.test(f)?(h(C,f),o++):h(C,xe(C))))}else if(a.match(/^-[0-9]$/)&&a.match(w)&&F(a.slice(1),d.bools))C=a.slice(1),h(C,xe(C));else if(a==="--"){P=i.slice(o+1);break}else if(g["halt-at-non-option"]){P=i.slice(o);break}else X(a)}E(G,!0),E(G,!1),S(G),b(),j(G,d.aliases,s,!0),u(G),g["set-placeholder-key"]&&y(G),Object.keys(d.counts).forEach(function(o){Q(G,o.split("."))||h(o,0)}),Z&&P.length&&(G[T]=[]),P.forEach(function(o){G[T].push(o)}),g["camel-case-expansion"]&&g["strip-dashed"]&&Object.keys(G).filter(o=>o!=="--"&&o.includes("-")).forEach(o=>{delete G[o]}),g["strip-aliased"]&&[].concat(...Object.keys(c).map(o=>c[o])).forEach(o=>{g["camel-case-expansion"]&&o.includes("-")&&delete G[o.split(".").map(a=>_e(a)).join(".")],delete G[o]});function X(o){const a=N("_",o);(typeof a=="string"||typeof a=="number")&&G._.push(a)}function Y(o,a,W,A){let C,J=F(a,d.nargs);if(J=typeof J!="number"||isNaN(J)?1:J,J===0)return Xe(A)||(B=Error(D("Argument unexpected for: %s",a))),h(a,xe(a)),o;let p=Xe(A)?0:1;if(g["nargs-eats-options"])W.length-(o+1)+p<J&&(B=Error(D("Not enough arguments following: %s",a))),p=J;else{for(C=o+1;C<W.length&&(!W[C].match(/^-[^0-9]/)||W[C].match(w)||Vt(W[C]));C++)p++;p<J&&(B=Error(D("Not enough arguments following: %s",a)))}let f=Math.min(p,J);for(!Xe(A)&&f>0&&(h(a,A),f--),C=o+1;C<f+o+1;C++)h(a,W[C]);return o+f}function m(o,a,W,A){let C=[],J=A||W[o+1];const p=F(a,d.nargs);if(F(a,d.bools)&&!/^(true|false)$/.test(J))C.push(!0);else if(Xe(J)||Xe(A)&&/^-/.test(J)&&!w.test(J)&&!Vt(J)){if(s[a]!==void 0){const f=s[a];C=Array.isArray(f)?f:[f]}}else{Xe(A)||C.push(z(a,A,!0));for(let f=o+1;f<W.length&&!(!g["greedy-arrays"]&&C.length>0||p&&typeof p=="number"&&C.length>=p||(J=W[f],/^-/.test(J)&&!w.test(J)&&!Vt(J)));f++)o=f,C.push(z(a,J,I))}return typeof p=="number"&&(p&&C.length<p||isNaN(p)&&C.length===0)&&(B=Error(D("Not enough arguments following: %s",a))),h(a,C),o}function h(o,a,W=I){if(/-/.test(o)&&g["camel-case-expansion"]){const J=o.split(".").map(function(p){return _e(p)}).join(".");We(o,J)}const A=z(o,a,W),C=o.split(".");M(G,C,A),d.aliases[o]&&d.aliases[o].forEach(function(J){const p=J.split(".");M(G,p,A)}),C.length>1&&g["dot-notation"]&&(d.aliases[C[0]]||[]).forEach(function(J){let p=J.split(".");const f=[].concat(C);f.shift(),p=p.concat(f),(d.aliases[o]||[]).includes(p.join("."))||M(G,p,A)}),F(o,d.normalize)&&!F(o,d.arrays)&&[o].concat(d.aliases[o]||[]).forEach(function(p){Object.defineProperty(Ce,p,{enumerable:!0,get(){return a},set(f){a=typeof f=="string"?Fe.normalize(f):f}})})}function We(o,a){d.aliases[o]&&d.aliases[o].length||(d.aliases[o]=[a],R[a]=!0),d.aliases[a]&&d.aliases[a].length||We(a,o)}function z(o,a,W){W&&(a=vi(a)),(F(o,d.bools)||F(o,d.counts))&&typeof a=="string"&&(a=a==="true");let A=Array.isArray(a)?a.map(function(C){return N(o,C)}):N(o,a);return F(o,d.counts)&&(Xe(A)||typeof A=="boolean")&&(A=xt()),F(o,d.normalize)&&F(o,d.arrays)&&(Array.isArray(a)?A=a.map(C=>Fe.normalize(C)):A=Fe.normalize(a)),A}function N(o,a){return!g["parse-positional-numbers"]&&o==="_"||!F(o,d.strings)&&!F(o,d.bools)&&!Array.isArray(a)&&(pn(a)&&g["parse-numbers"]&&Number.isSafeInteger(Math.floor(parseFloat(`${a}`)))||!Xe(a)&&F(o,d.numbers))&&(a=Number(a)),a}function S(o){const a=Object.create(null);j(a,d.aliases,s),Object.keys(d.configs).forEach(function(W){const A=o[W]||a[W];if(A)try{let C=null;const J=Fe.resolve(Fe.cwd(),A),p=d.configs[W];if(typeof p=="function"){try{C=p(J)}catch(f){C=f}if(C instanceof Error){B=C;return}}else C=Fe.require(J);k(C)}catch(C){C.name==="PermissionDenied"?B=C:o[W]&&(B=Error(D("Invalid JSON config file: %s",A)))}})}function k(o,a){Object.keys(o).forEach(function(W){const A=o[W],C=a?a+"."+W:W;typeof A=="object"&&A!==null&&!Array.isArray(A)&&g["dot-notation"]?k(A,C):(!Q(G,C.split("."))||F(C,d.arrays)&&g["combine-arrays"])&&h(C,A)})}function b(){typeof r<"u"&&r.forEach(function(o){k(o)})}function E(o,a){if(typeof V>"u")return;const W=typeof V=="string"?V:"",A=Fe.env();Object.keys(A).forEach(function(C){if(W===""||C.lastIndexOf(W,0)===0){const J=C.split("__").map(function(p,f){return f===0&&(p=p.substring(W.length)),_e(p)});(a&&d.configs[J.join(".")]||!a)&&!Q(o,J)&&h(J.join("."),A[C])}})}function u(o){let a;const W=new Set;Object.keys(o).forEach(function(A){if(!W.has(A)&&(a=F(A,d.coercions),typeof a=="function"))try{const C=N(A,a(o[A]));[].concat(d.aliases[A]||[],A).forEach(J=>{W.add(J),o[J]=C})}catch(C){B=C}})}function y(o){return d.keys.forEach(a=>{~a.indexOf(".")||typeof o[a]>"u"&&(o[a]=void 0)}),o}function j(o,a,W,A=!1){Object.keys(W).forEach(function(C){Q(o,C.split("."))||(M(o,C.split("."),W[C]),A&&(O[C]=!0),(a[C]||[]).forEach(function(J){Q(o,J.split("."))||M(o,J.split("."),W[C])}))})}function Q(o,a){let W=o;g["dot-notation"]||(a=[a.join(".")]),a.slice(0,-1).forEach(function(C){W=W[C]||{}});const A=a[a.length-1];return typeof W!="object"?!1:A in W}function M(o,a,W){let A=o;g["dot-notation"]||(a=[a.join(".")]),a.slice(0,-1).forEach(function(_){_=El(_),typeof A=="object"&&A[_]===void 0&&(A[_]={}),typeof A[_]!="object"||Array.isArray(A[_])?(Array.isArray(A[_])?A[_].push({}):A[_]=[A[_],{}],A=A[_][A[_].length-1]):A=A[_]});const C=El(a[a.length-1]),J=F(a.join("."),d.arrays),p=Array.isArray(W);let f=g["duplicate-arguments-array"];!f&&F(C,d.nargs)&&(f=!0,(!Xe(A[C])&&d.nargs[C]===1||Array.isArray(A[C])&&A[C].length===d.nargs[C])&&(A[C]=void 0)),W===xt()?A[C]=xt(A[C]):Array.isArray(A[C])?f&&J&&p?A[C]=g["flatten-duplicate-arrays"]?A[C].concat(W):(Array.isArray(A[C][0])?A[C]:[A[C]]).concat([W]):!f&&!!J==!!p?A[C]=W:A[C]=A[C].concat([W]):A[C]===void 0&&J?A[C]=p?W:[W]:f&&!(A[C]===void 0||F(C,d.counts)||F(C,d.bools))?A[C]=[A[C],W]:A[C]=W}function v(...o){o.forEach(function(a){Object.keys(a||{}).forEach(function(W){d.aliases[W]||(d.aliases[W]=[].concat(c[W]||[]),d.aliases[W].concat(W).forEach(function(A){if(/-/.test(A)&&g["camel-case-expansion"]){const C=_e(A);C!==W&&d.aliases[W].indexOf(C)===-1&&(d.aliases[W].push(C),R[C]=!0)}}),d.aliases[W].concat(W).forEach(function(A){if(A.length>1&&/[A-Z]/.test(A)&&g["camel-case-expansion"]){const C=Fn(A,"-");C!==W&&d.aliases[W].indexOf(C)===-1&&(d.aliases[W].push(C),R[C]=!0)}}),d.aliases[W].forEach(function(A){d.aliases[A]=[W].concat(d.aliases[W].filter(function(C){return A!==C}))}))})})}function F(o,a){const W=[].concat(d.aliases[o]||[],o),A=Object.keys(a),C=W.find(J=>A.includes(J));return C?a[C]:!1}function ae(o){const a=Object.keys(d);return[].concat(a.map(A=>d[A])).some(function(A){return Array.isArray(A)?A.includes(o):A[o]})}function le(o,...a){return[].concat(...a).some(function(A){const C=o.match(A);return C&&ae(C[1])})}function de(o){if(o.match(w)||!o.match(/^-[^-]+/))return!1;let a=!0,W;const A=o.slice(1).split("");for(let C=0;C<A.length;C++){if(W=o.slice(C+2),!ae(A[C])){a=!1;break}if(A[C+1]&&A[C+1]==="="||W==="-"||/[A-Za-z]/.test(A[C])&&/^-?\d+(\.\d*)?(e-?\d+)?$/.test(W)||A[C+1]&&A[C+1].match(/\W/))break}return a}function Vt(o){return g["unknown-options-as-args"]&&Ln(o)}function Ln(o){return o=o.replace(/^-{3,}/,"--"),o.match(w)||de(o)?!1:!le(o,/^-+([^=]+?)=[\s\S]*$/,x,/^-+([^=]+?)$/,/^-+([^=]+?)-$/,/^-+([^=]+?\d+)$/,/^-+([^=]+?)\W+.*$/)}function xe(o){return!F(o,d.bools)&&!F(o,d.counts)&&`${o}`in s?s[o]:wn(On(o))}function wn(o){return{[re.BOOLEAN]:!0,[re.STRING]:"",[re.NUMBER]:void 0,[re.ARRAY]:[]}[o]}function On(o){let a=re.BOOLEAN;return F(o,d.strings)?a=re.STRING:F(o,d.numbers)?a=re.NUMBER:F(o,d.bools)?a=re.BOOLEAN:F(o,d.arrays)&&(a=re.ARRAY),a}function Xe(o){return o===void 0}function Dn(){Object.keys(d.counts).find(o=>F(o,d.arrays)?(B=Error(D("Invalid configuration: %s, opts.count excludes opts.array.",o)),!0):F(o,d.nargs)?(B=Error(D("Invalid configuration: %s, opts.count excludes opts.narg.",o)),!0):!1)}return{aliases:Object.assign({},d.aliases),argv:Object.assign(Ce,G),configuration:g,defaulted:Object.assign({},O),error:B,newAliases:Object.assign({},R)}}}function Hi(e){const t=[],l=Object.create(null);let n=!0;for(Object.keys(e).forEach(function(i){t.push([].concat(e[i],i))});n;){n=!1;for(let i=0;i<t.length;i++)for(let I=i+1;I<t.length;I++)if(t[i].filter(function(g){return t[I].indexOf(g)!==-1}).length){t[i]=t[i].concat(t[I]),t.splice(I,1),n=!0;break}}return t.forEach(function(i){i=i.filter(function(c,g,s){return s.indexOf(c)===g});const I=i.pop();I!==void 0&&typeof I=="string"&&(l[I]=i)}),l}function xt(e){return e!==void 0?e+1:1}function El(e){return e==="__proto__"?"___proto___":e}function vi(e){return typeof e=="string"&&(e[0]==="'"||e[0]==='"')&&e[e.length-1]===e[0]?e.substring(1,e.length-1):e}/**
 * @fileoverview Main entrypoint for libraries using yargs-parser in Node.js
 * CJS and ESM environments.
 *
 * @license
 * Copyright (c) 2016, Contributors
 * SPDX-License-Identifier: ISC
 */var Gt,Mt,Bt;const kl=process&&process.env&&process.env.YARGS_MIN_NODE_VERSION?Number(process.env.YARGS_MIN_NODE_VERSION):12,Yl=(Mt=(Gt=process==null?void 0:process.versions)===null||Gt===void 0?void 0:Gt.node)!==null&&Mt!==void 0?Mt:(Bt=process==null?void 0:process.version)===null||Bt===void 0?void 0:Bt.slice(1);if(Yl&&Number(Yl.match(/^([^.]+)/)[1])<kl)throw Error(`yargs parser supports a minimum Node.js version of ${kl}. Read our version support policy: https://github.com/yargs/yargs-parser#supported-nodejs-versions`);const qi=process?process.env:{},Tn=new Pi({cwd:process.cwd,env:()=>qi,format:vn.format,normalize:qt.normalize,resolve:qt.resolve,require:e=>{if(typeof require<"u")return require(e);if(e.match(/\.json$/))return JSON.parse(on.readFileSync(e,"utf8"));throw Error("only .json config files are supported in ESM")}}),st=function(t,l){return Tn.parse(t.slice(),l).argv};st.detailed=function(e,t){return Tn.parse(e.slice(),t)};st.camelCase=_e;st.decamelize=Fn;st.looksLikeNumber=pn;const $i={exportToOo:"导出为......",exportWithPrevious:"使用上一次设置导出",exportSuccessNotice:H`导出文件 ${0} 成功！`,exportCommandOutputMessage:H`命令：${0}`,exportErrorOutputMessage:H`命令 ${0}，错误：${1}`,pleaseOpenFile:"请打开一个文件先。",preparing:H`正在生成 "${0}" ......`,exportDialog:{fileName:"文件名",type:"类型",exportTo:"导出到",title:H`导出为 ${0}`,export:"导出",selectExportFolder:"请选择导出文件夹",overwriteConfirmation:"覆盖提示"},messageBox:{yes:"是",no:"否",ok:"确认",cancel:"取消"},overwriteConfirmationDialog:{replace:"替换",title:H`"${0}" 已经存在。您要替换它吗？`,message:H`"${0}" 文件夹中已有相同的文件或文件夹，若替换，则会覆盖其当前内容。`},settingTab:{title:"导出设置",general:"通用",name:"名称",customLocation:"自定义",version:H`版本: ${0}`,pandocNotFound:"找不到 Pandoc，请填写 Pandoc 文件路径，或者将其添加到系统环境变量中。",pandocPath:"Pandoc 路径",defaultFolderForExportedFile:"默认的导出文件夹",openExportedFileLocation:"打开导出文件所在目录",sameFolderWithCurrentFile:"与原文件同一目录下",openExportedFile:"打开导出文件",pandocPathPlaceholder:"（自动检测）",editCommandTemplate:"编辑命令模板",chooseCommandTemplate:"选择模板",afterExport:"导出后",command:"命令",arguments:"参数",auto:"自动",reset:"重置",add:"添加",remove:"移除",rename:"重命名",targetFileExtensions:"目标文件扩展名",targetFileExtensionsTip:"（用空格分开）",showCommandOutput:"显示命令行输出",runCommand:"运行自定义命令",extraArguments:"自定义参数",save:"保存",new:"新建",template:"模板",advanced:"高级",environmentVariables:"环境变量",environmentVariablesDesc:"定义导出的环境变量."}},_i={exportToOo:"Export to ......",exportSuccessNotice:H`Export file ${0} success!`,exportCommandOutputMessage:H`Command: ${0}`,exportErrorOutputMessage:H`Command: ${0}，Error:${1}`,exportWithPrevious:"Export with Previous",pleaseOpenFile:"Please open a file first.",preparing:H`generating "${0}" ......`,exportDialog:{exportTo:"Export to",fileName:"File Name",title:H`Export to ${0}`,export:"Export",selectExportFolder:"Please select an export folder.",overwriteConfirmation:"Overwrite confirmation",type:"Type"},messageBox:{yes:"Yes",no:"No",ok:"Ok",cancel:"Cancel"},overwriteConfirmationDialog:{replace:"Replace",title:H`"${0}" already exists. Do you want to replace it?`,message:H`A file or folder with the same name already exists in the folder "${0}". Replacing it will overwrite its current contents.`},settingTab:{general:"General",name:"Name",title:"Export Settings",version:H`Version: ${0}`,pandocNotFound:"Pandoc not found, please fill in the Pandoc file path, or add it to the system environment variables.",defaultFolderForExportedFile:"Default Folder for Exported File",openExportedFileLocation:"Open exported file location",openExportedFile:"Open exported file",pandocPath:"Pandoc path",pandocPathPlaceholder:"(Auto Detect)",editCommandTemplate:"Edit Command Template",chooseCommandTemplate:"Choose template",customLocation:"Custom location",template:"Template",command:"Command",reset:"Reset",auto:"Auto",add:"Add",remove:"Remove",rename:"Rename",sameFolderWithCurrentFile:"Same folder with current file",afterExport:"After Export",targetFileExtensions:"Target file extensions",targetFileExtensionsTip:"(Separated by whitespace)",showCommandOutput:"Show command output",runCommand:"Run command",extraArguments:"Extra arguments",save:"Save",new:"New",arguments:"Arguments",advanced:"Advanced",environmentVariables:"Environment Variables",environmentVariablesDesc:"Define the Environment Variables for exporting."}},eI={exportToOo:"Export to ......",exportSuccessNotice:H`Export der Datei ${0} erfolgreich!`,exportCommandOutputMessage:H`Command: ${0}`,exportErrorOutputMessage:H`Command: ${0}，Fehler:${1}`,exportWithPrevious:"Exportiere mit Vorherigem",pleaseOpenFile:"Bitte öffne zunächst eine Datei.",preparing:H`generating "${0}" ......`,exportDialog:{exportTo:"Exportiere nach",fileName:"Dateiname",title:H`Export to ${0}`,export:"Export",selectExportFolder:"Zielordner auswählen",overwriteConfirmation:"Überschreibe den Zielordner",type:"Typ"},messageBox:{yes:"Ja",no:"Nein",ok:"Ok",cancel:"Abbrechen"},overwriteConfirmationDialog:{replace:"Ersetze",title:H`"${0}" existiert bereits. Soll er ersetzt werden?`,message:H`Eine Datei oder ein Ordner mit dem gleichen Namen existiert bereits im Ordner "${0}". Das Ersetzen wird die jetzigen Inhalte überschreiben.`},settingTab:{general:"Allgemein",name:"Name",title:"Export-Einstellungen",version:H`Version: ${0}`,pandocNotFound:"Pandoc.exe wurde nicht gefunden. Bitte geben Sie den Pfad zur Pandoc.exe ein oder fügen Sie ihn den Window Systemumgebungsvariablen hinzu.",defaultFolderForExportedFile:"Standardordner für exportierte Dateien",openExportedFileLocation:"Speicherort der exportierten Datei öffnen",openExportedFile:"Exportierte Datei öffnen",pandocPath:"Pfad zur Datei Pandoc.exe",pandocPathPlaceholder:"(Automatische Erkennung)",editCommandTemplate:"‘Befehlsvorlage bearbeiten",chooseCommandTemplate:"Vorlage auswählen",customLocation:"Benutzerdefinierter Speicherort",template:"Vorlage",command:"Befehl",reset:"Zurücksetzen",auto:"Auto",add:"Hinzufügen",remove:"Entfernen",rename:"Umbenennen",sameFolderWithCurrentFile:"Der gleiche Ordner mit der aktuellen Datei",afterExport:"Nach dem Export",targetFileExtensions:"Dateinamenserweiterung der Zieldatei",targetFileExtensionsTip:"(Mit Leerzeichen getrennt)",showCommandOutput:"Zeige die Ausgabe des Befehls",runCommand:"Starte den Befehl",extraArguments:"Zusätzliche Parameter",save:"Speichern",new:"Neu",arguments:"Parameter",advanced:"Advanced",environmentVariables:"Environment Variables",environmentVariablesDesc:"Define the Environment Variables for exporting."}},Jn={"de-DE":eI,"en-US":_i,"zh-CN":$i,get current(){const e=Object.keys(this),t=Ze.moment.locale().toLowerCase();let l=e.find(i=>i.toLowerCase()===t.toLowerCase());if(l)return this[l];const n=t.split("-")[0];return l=e.find(i=>i.toLowerCase().startsWith(n)),l?this[l]:this["en-US"]}};class yl extends Ze.Modal{constructor(t,l,n){super(t),this.options=typeof l=="string"?{message:l,buttons:"Ok",title:n}:l,this.lang=Jn.current}onOpen(){const{titleEl:t,contentEl:l,lang:n,options:{message:i,title:I,buttons:c,callback:g,buttonsLabel:s,buttonsClass:r}}=this;switch(I&&t.setText(I),l.createDiv({text:i}),c){case"Yes":l.createEl("div",{cls:["modal-button-container"],parent:l},V=>{V.createEl("button",{text:(s==null?void 0:s.yes)??n.messageBox.yes,cls:["mod-cta",r==null?void 0:r.yes],parent:V}).onclick=()=>this.call(g==null?void 0:g.yes)});break;case"YesNo":l.createEl("div",{cls:["modal-button-container"],parent:l},V=>{V.createEl("button",{text:(s==null?void 0:s.yes)??n.messageBox.yes,cls:["mod-cta",r==null?void 0:r.yes],parent:V}).onclick=()=>this.call(g==null?void 0:g.yes),V.createEl("button",{text:(s==null?void 0:s.no)??n.messageBox.no,cls:["mod-cta",r==null?void 0:r.no],parent:V}).onclick=()=>this.call(g==null?void 0:g.no)});break;case"Ok":l.createEl("div",{cls:["modal-button-container"],parent:l},V=>{V.createEl("button",{text:(s==null?void 0:s.ok)??n.messageBox.ok,cls:["mod-cta",r==null?void 0:r.no],parent:V}).onclick=()=>this.call(g==null?void 0:g.ok)});break;case"OkCancel":l.createEl("div",{cls:["modal-button-container"],parent:l},V=>{V.createEl("button",{text:(s==null?void 0:s.ok)??n.messageBox.ok,cls:["mod-cta",r==null?void 0:r.ok],parent:V}).onclick=()=>this.call(g==null?void 0:g.ok),V.createEl("button",{text:(s==null?void 0:s.cancel)??n.messageBox.cancel,cls:["mod-cta",r==null?void 0:r.cancel],parent:V}).onclick=()=>this.call(g==null?void 0:g.cancel)});break}}call(t){t&&t(),this.close()}onClose(){const{contentEl:t}=this;t.empty()}}async function un(e,t,l,n,i,I,c,g,s,r){const{settings:V,lang:Z,manifest:T,app:{vault:{adapter:R,config:O},loadProgress:D,fileManager:d}}=e;if(!n){const le=sn(i);n=`${t.basename}${le}`}I==null&&(I=V.showOverwriteConfirmation);const w=R.getBasePath(),x=`${w}/${T.dir}`,B=`${x}/lua`,P=l,G=`${P}/${n}`,Ce=n.substring(0,n.lastIndexOf(".")),X=n,Y=R.getFullPath(t.path),m=Y.substring(0,Y.length-t.name.length-1),h=t.basename,We=t.name;let z=O.attachmentFolderPath??"/";z==="/"?z=w:z.startsWith(".")&&(z=qt.join(m,z.substring(1)));const N=await new Promise(le=>{try{d.processFrontMatter(t,de=>(le(de),de))}catch(de){console.error(de),le(void 0)}}),S={pluginDir:x,luaDir:B,outputDir:P,outputPath:G,outputFileName:Ce,outputFileFullName:X,currentDir:m,currentPath:Y,currentFileName:h,currentFileFullName:We,attachmentFolderPath:z,vaultDir:w,metadata:N,options:c},k=Object.assign({HOME:tt.env.HOME??tt.env.USERPROFILE},tt.env,S),b=S.env=Object.fromEntries(Object.entries(fe(V.env)??{}).map(([le,de])=>[le,Xl(de,k)])),E=i.type==="custom"&&i.showCommandOutput,u=i.openExportedFileLocation??V.openExportedFileLocation,y=i.openExportedFile??V.openExportedFile;if(I&&yt.existsSync(G)){const le=await ye.remote.dialog.showSaveDialog({title:Z.overwriteConfirmationDialog.title(X),defaultPath:G,properties:["showOverwriteConfirmation","createDirectory"]});if(le.canceled)return;S.outputPath=le.filePath,S.outputDir=S.outputPath.substring(0,S.outputPath.lastIndexOf("/")),S.outputFileFullName=S.outputPath.substring(S.outputDir.length+1),S.outputFileName=S.outputFileFullName.substring(0,S.outputFileFullName.lastIndexOf("."))}D.setMessage(Z.preparing(X)),r&&r(),D.show();const j=fe(V.pandocPath)??"pandoc",Q=i.type==="pandoc"?`${j} ${i.arguments??""} ${i.customArguments??""} "${Y}"`:i.command,M=Xl(Q,S),v=st(M.match(/(?:[^\s"]+|"[^"]*")+/g),{alias:{output:["o"]}}),F=v.output.startsWith('"')&&v.output.endsWith('"')||v.output.startsWith("'")&&v.output.endsWith("'")?v.output.substring(1,v.output.length-1):v.output,ae=F.substring(0,F.lastIndexOf("/"));yt.existsSync(ae)||yt.mkdirSync(ae);try{console.log(`[${e.manifest.name}]: export command: ${M}`),await $t(M,{cwd:S.currentDir,env:b}),D.hide();const le=async()=>{u&&setTimeout(()=>{ye.remote.shell.showItemInFolder(F)},1e3),y&&await ye.remote.shell.openPath(F),i.type==="pandoc"&&i.runCommand===!0&&i.command&&await $t(i.command),g&&g()};if(E){const de=new yl(app,Z.exportCommandOutputMessage(M));de.onClose=le,de.open()}else new Ze.Notice(Z.exportSuccessNotice(X),1500),await le()}catch(le){D.hide(),new yl(app,Z.exportErrorOutputMessage(M,le)).open(),s&&s()}}const ll=e=>{const t=new Ze.Modal(e.app);let l=[],n=!1;return be(()=>{oe(t.titleEl,()=>e.title)}),be(()=>{oe(t.contentEl,()=>e.children)}),be(()=>{const i=Object.entries(e.classList??{}).filter(([,I])=>I).map(([I])=>I);l.length>0&&t.containerEl.removeClasses(l),i.length>0&&t.containerEl.addClasses(i),l=i}),t.onClose=()=>{n||(n=!0,e.onClose())},an(()=>t.open()),ct(()=>{n||t.close()}),document.createTextNode("")},tI=Ue("<button>"),nl=e=>(()=>{const t=tI();return sl(t,"click",e.onClick,!0),oe(t,()=>e.children),ie(()=>t.classList.toggle("mod-cta",!!e.cta)),t})();ol(["click"]);const lI=Ue('<div><div class="setting-item-info"><div class="setting-item-name"></div><div class="setting-item-description"></div></div><div class="setting-item-control">'),nI=Ue('<div class="checkbox-container"><input type="checkbox">'),iI=Ue('<div class="setting-editor-extra-setting-button">'),II=Ue('<input type="text">'),gI=Ue("<textarea>"),cI=Ue('<select class="dropdown">'),oI=Ue("<option>"),fn=Si(),sI=()=>mi(fn),K=e=>{const t={settingEl:null};return U(fn.Provider,{value:t,get children(){const l=lI(),n=l.firstChild,i=n.firstChild,I=i.nextSibling,c=n.nextSibling;return Xn(g=>t.settingEl=g,l),oe(i,()=>e.name),oe(I,()=>e.description),oe(c,()=>e.children),ie(g=>{const s=`setting-item ${e.class??""}`.trimEnd(),r=!!e.heading,V=!!e.disabled;return s!==g._v$&&Nn(l,g._v$=s),r!==g._v$2&&l.classList.toggle("setting-item-heading",g._v$2=r),V!==g._v$3&&l.classList.toggle("is-disable",g._v$3=V),g},{_v$:void 0,_v$2:void 0,_v$3:void 0}),l}})},he=e=>{const t=sI();return an(()=>{t.settingEl.addClass("mod-toggle")}),ct(()=>{t.settingEl.removeClass("mod-toggle")}),(()=>{const l=nI();return l.$$click=()=>e.onChange&&e.onChange(!e.checked),ie(()=>l.classList.toggle("is-enabled",!!e.checked)),l})()},je=e=>(()=>{const t=iI();return sl(t,"click",e.onClick,!0),Xn(l=>e.icon&&qn.setIcon(l,e.icon),t),ie(l=>{const n=!!(e.icon&&e.onClick),i=e.tooltip;return n!==l._v$4&&t.classList.toggle("clickable-icon",l._v$4=n),i!==l._v$5&&ue(t,"aria-label",l._v$5=i),l},{_v$4:void 0,_v$5:void 0}),t})(),Ve=e=>(()=>{const t=II();return t.addEventListener("change",l=>e.onChange&&e.onChange(l.target.value)),ie(l=>{const n=e.title,i=e.placeholder,I=e.spellcheck??!1,c=e.style,g=e.disabled;return n!==l._v$6&&ue(t,"title",l._v$6=n),i!==l._v$7&&ue(t,"placeholder",l._v$7=i),I!==l._v$8&&ue(t,"spellcheck",l._v$8=I),l._v$9=Cl(t,c,l._v$9),g!==l._v$10&&(t.disabled=l._v$10=g),l},{_v$6:void 0,_v$7:void 0,_v$8:void 0,_v$9:void 0,_v$10:void 0}),ie(()=>t.value=e.value),t})(),CI=e=>(()=>{const t=gI();return t.addEventListener("change",l=>e.onChange&&e.onChange(l.target.value)),ie(l=>{const n=e.placeholder,i=e.spellcheck??!1,I=e.style,c=e.disabled;return n!==l._v$11&&ue(t,"placeholder",l._v$11=n),i!==l._v$12&&ue(t,"spellcheck",l._v$12=i),l._v$13=Cl(t,I,l._v$13),c!==l._v$14&&(t.disabled=l._v$14=c),l},{_v$11:void 0,_v$12:void 0,_v$13:void 0,_v$14:void 0}),ie(()=>t.value=e.value),t})(),nt=e=>(()=>{const t=cI();return t.addEventListener("change",l=>e.onChange&&e.onChange(l.target.value,l.target.selectedIndex)),t.autofocus=!0,oe(t,U(hn,{get each(){return e.options},children:l=>(()=>{const n=oI();return oe(n,()=>l.name??l.value),ie(()=>n.selected=l.value===e.selected),ie(()=>n.value=l.value),n})()})),t})();ol(["click"]);const VI=Ue("<div>Unsupported <!> "),aI=(e,t)=>{switch(e.type){case"checkbox":return U(K,{get name(){return e.title},get description(){return e.description},get children(){return U(he,{get checked(){return Wt(e)},onChange:t})}});case"dropdown":return U(K,{get name(){return e.title},get description(){return e.description},get children(){return U(nt,{get selected(){return Wt(e)},get options(){return e.options},onChange:l=>t(l)})}});case"textInput":return U(K,{get name(){return e.title},get description(){return e.description},get children(){return U(Ve,{get value(){return Wt(e)},onChange:t})}});default:return(()=>{const l=VI(),n=l.firstChild,i=n.nextSibling;return i.nextSibling,oe(l,()=>JSON.stringify(e),i),l})()}},dI=e=>{let t={};be(()=>t=e.value??bn(e.meta));const l=(i,I)=>{t[i]=I,e.onChange&&e.onChange(t,i)},n=(i,I)=>{const c=s=>l(i,s);let g;return e.customEditor&&(g=e.customEditor(I,c),g)?g:aI(I,c)};return U(hn,{get each(){return Object.entries(e.meta)},children:([i,I])=>n(i,I)})},bn=e=>Object.fromEntries(Object.entries(e).map(([t,l])=>[t,Wt(l)])),Wt=e=>{if(e.default)return e.default instanceof Function?e.default():e.default},rI=Ue('<div class="modal-button-container">'),AI=e=>{var Y;const{plugin:{app:t,settings:l,lang:n},currentFile:i}=e,[I,c]=se(!1),[g,s]=se(l.showOverwriteConfirmation),[r,V]=se(l.lastExportType??((Y=l.items.first())==null?void 0:Y.name)),[Z,T]=se({}),R=ne(()=>l.items.find(m=>m.name===r())),O=ne(()=>sn(R())),D=ne(()=>n.exportDialog.title(R().name)),d=ne(()=>R().optionsMeta),[w,x]=se(`${fe(l.lastExportDirectory)??ye.remote.app.getPath("documents")}`),[B,P]=se(`${i.basename}${O()}`);be(()=>{const m=d();T(m?bn(m):{})}),be(()=>{let m=$(B);m=m.includes(".")?m.substring(0,m.lastIndexOf(".")):m,P(`${m}${O()}`)});const G=l.items.map(m=>({name:m.name,value:m.name})),Ce=async()=>{var h;const m=await ye.remote.dialog.showOpenDialog({title:n.exportDialog.selectExportFolder,defaultPath:w(),properties:["createDirectory","openDirectory"]});!m.canceled&&((h=m.filePaths)==null?void 0:h.length)>0&&x(m.filePaths[0])},X=async()=>{const m=e.plugin;await un(m,i,$(w),$(B),$(R),$(g),Z(),async()=>{l.showOverwriteConfirmation=$(g),l.lastExportDirectory=Ke(l.lastExportDirectory,$(w)),l.lastExportType=$(R).name,await m.saveSettings(),e.onClose&&e.onClose()},()=>{c(!1)},()=>{c(!0)})};return U(ll,{app:t,get title(){return D()},get classList(){return{hidden:I()}},get onClose(){return e.onClose},get children(){return[U(K,{get name(){return n.exportDialog.type},get children(){return U(nt,{options:G,onChange:m=>V(m),get selected(){return r()}})}}),U(K,{get name(){return n.exportDialog.fileName},get children(){return U(Ve,{get title(){return B()},get value(){return B()},onChange:m=>P(m)})}}),U(mt,{get when(){return d()},get children(){return U(dI,{get meta(){return d()},get value(){return Z()},onChange:m=>T(m)})}}),U(K,{get name(){return n.exportDialog.exportTo},get children(){return[U(Ve,{get title(){return w()},get value(){return w()},disabled:!0}),U(je,{icon:"folder",onClick:Ce})]}}),U(K,{get name(){return n.exportDialog.overwriteConfirmation},class:"mod-toggle",get children(){return U(he,{get checked(){return g()},onChange:s})}}),(()=>{const m=rI();return oe(m,U(nl,{cta:!0,onClick:X,get children(){return n.exportDialog.export}})),m})()]}})},ZI=(e,t)=>lt(l=>{let n=!1;const i=()=>{n||(n=!0,l())},I=oe(document.body,()=>U(AI,{onClose:i,plugin:e,currentFile:t}));return ct(()=>{I instanceof Node&&document.body.contains(I)&&document.body.removeChild(I)}),i}),jt={show:ZI},Ft=Symbol("store-raw"),It=Symbol("store-node");function En(e){let t=e[Ne];if(!t&&(Object.defineProperty(e,Ne,{value:t=new Proxy(e,mI)}),!Array.isArray(e))){const l=Object.keys(e),n=Object.getOwnPropertyDescriptors(e);for(let i=0,I=l.length;i<I;i++){const c=l[i];n[c].get&&Object.defineProperty(e,c,{enumerable:n[c].enumerable,get:n[c].get.bind(t)})}}return t}function we(e){let t;return e!=null&&typeof e=="object"&&(e[Ne]||!(t=Object.getPrototypeOf(e))||t===Object.prototype||Array.isArray(e))}function Oe(e,t=new Set){let l,n,i,I;if(l=e!=null&&e[Ft])return l;if(!we(e)||t.has(e))return e;if(Array.isArray(e)){Object.isFrozen(e)?e=e.slice(0):t.add(e);for(let c=0,g=e.length;c<g;c++)i=e[c],(n=Oe(i,t))!==i&&(e[c]=n)}else{Object.isFrozen(e)?e=Object.assign({},e):t.add(e);const c=Object.keys(e),g=Object.getOwnPropertyDescriptors(e);for(let s=0,r=c.length;s<r;s++)I=c[s],!g[I].get&&(i=e[I],(n=Oe(i,t))!==i&&(e[I]=n))}return e}function Vl(e){let t=e[It];return t||Object.defineProperty(e,It,{value:t=Object.create(null)}),t}function il(e,t,l){return e[t]||(e[t]=Yn(l))}function UI(e,t){const l=Reflect.getOwnPropertyDescriptor(e,t);return!l||l.get||!l.configurable||t===Ne||t===It||(delete l.value,delete l.writable,l.get=()=>e[Ne][t]),l}function kn(e){if(dn()){const t=Vl(e);(t._||(t._=Yn()))()}}function SI(e){return kn(e),Reflect.ownKeys(e)}function Yn(e){const[t,l]=se(e,{equals:!1,internal:!0});return t.$=l,t}const mI={get(e,t,l){if(t===Ft)return e;if(t===Ne)return l;if(t===_t)return kn(e),l;const n=Vl(e),i=n[t];let I=i?i():e[t];if(t===It||t==="__proto__")return I;if(!i){const c=Object.getOwnPropertyDescriptor(e,t);dn()&&(typeof I!="function"||e.hasOwnProperty(t))&&!(c&&c.get)&&(I=il(n,t,I)())}return we(I)?En(I):I},has(e,t){return t===Ft||t===Ne||t===_t||t===It||t==="__proto__"?!0:(this.get(e,t,e),t in e)},set(){return!0},deleteProperty(){return!0},ownKeys:SI,getOwnPropertyDescriptor:UI};function De(e,t,l,n=!1){if(!n&&e[t]===l)return;const i=e[t],I=e.length;l===void 0?delete e[t]:e[t]=l;let c=Vl(e),g;if((g=il(c,t,i))&&g.$(()=>l),Array.isArray(e)&&e.length!==I){for(let s=e.length;s<I;s++)(g=c[s])&&g.$();(g=il(c,"length",I))&&g.$(e.length)}(g=c._)&&g.$()}function yn(e,t){const l=Object.keys(t);for(let n=0;n<l.length;n+=1){const i=l[n];De(e,i,t[i])}}function WI(e,t){if(typeof t=="function"&&(t=t(e)),t=Oe(t),Array.isArray(t)){if(e===t)return;let l=0,n=t.length;for(;l<n;l++){const i=t[l];e[l]!==i&&De(e,l,i)}De(e,"length",n)}else yn(e,t)}function et(e,t,l=[]){let n,i=e;if(t.length>1){n=t.shift();const c=typeof n,g=Array.isArray(e);if(Array.isArray(n)){for(let s=0;s<n.length;s++)et(e,[n[s]].concat(t),l);return}else if(g&&c==="function"){for(let s=0;s<e.length;s++)n(e[s],s)&&et(e,[s].concat(t),l);return}else if(g&&c==="object"){const{from:s=0,to:r=e.length-1,by:V=1}=n;for(let Z=s;Z<=r;Z+=V)et(e,[Z].concat(t),l);return}else if(t.length>1){et(e[n],t,[n].concat(l));return}i=e[n],l=[n].concat(l)}let I=t[0];typeof I=="function"&&(I=I(i,l),I===i)||n===void 0&&I==null||(I=Oe(I),n===void 0||we(i)&&we(I)&&!Array.isArray(I)?yn(i,I):De(e,n,I))}function RI(...[e,t]){const l=Oe(e||{}),n=Array.isArray(l),i=En(l);function I(...c){St(()=>{n&&c.length===1?WI(l,c[0]):et(l,c)})}return[i,I]}const pt=new WeakMap,Qn={get(e,t){if(t===Ft)return e;const l=e[t];let n;return we(l)?pt.get(l)||(pt.set(l,n=new Proxy(l,Qn)),n):l},set(e,t,l){return De(e,t,Oe(l)),!0},deleteProperty(e,t){return De(e,t,void 0,!0),!0}};function hI(e){return t=>{if(we(t)){let l;(l=pt.get(t))||pt.set(t,l=new Proxy(t,Qn)),e(l)}return t}}function NI(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var Il={exports:{}};const XI="2.0.0",FI=256,pI=Number.MAX_SAFE_INTEGER||9007199254740991,TI=16,JI=["major","premajor","minor","preminor","patch","prepatch","prerelease"];var ft={MAX_LENGTH:FI,MAX_SAFE_COMPONENT_LENGTH:TI,MAX_SAFE_INTEGER:pI,RELEASE_TYPES:JI,SEMVER_SPEC_VERSION:XI,FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2};const uI=typeof process=="object"&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{};var bt=uI;(function(e,t){const{MAX_SAFE_COMPONENT_LENGTH:l}=ft,n=bt;t=e.exports={};const i=t.re=[],I=t.safeRe=[],c=t.src=[],g=t.t={};let s=0;const r=(V,Z,T)=>{const R=Z.split("\\s*").join("\\s{0,1}").split("\\s+").join("\\s"),O=s++;n(V,O,Z),g[V]=O,c[O]=Z,i[O]=new RegExp(Z,T?"g":void 0),I[O]=new RegExp(R,T?"g":void 0)};r("NUMERICIDENTIFIER","0|[1-9]\\d*"),r("NUMERICIDENTIFIERLOOSE","[0-9]+"),r("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),r("MAINVERSION",`(${c[g.NUMERICIDENTIFIER]})\\.(${c[g.NUMERICIDENTIFIER]})\\.(${c[g.NUMERICIDENTIFIER]})`),r("MAINVERSIONLOOSE",`(${c[g.NUMERICIDENTIFIERLOOSE]})\\.(${c[g.NUMERICIDENTIFIERLOOSE]})\\.(${c[g.NUMERICIDENTIFIERLOOSE]})`),r("PRERELEASEIDENTIFIER",`(?:${c[g.NUMERICIDENTIFIER]}|${c[g.NONNUMERICIDENTIFIER]})`),r("PRERELEASEIDENTIFIERLOOSE",`(?:${c[g.NUMERICIDENTIFIERLOOSE]}|${c[g.NONNUMERICIDENTIFIER]})`),r("PRERELEASE",`(?:-(${c[g.PRERELEASEIDENTIFIER]}(?:\\.${c[g.PRERELEASEIDENTIFIER]})*))`),r("PRERELEASELOOSE",`(?:-?(${c[g.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${c[g.PRERELEASEIDENTIFIERLOOSE]})*))`),r("BUILDIDENTIFIER","[0-9A-Za-z-]+"),r("BUILD",`(?:\\+(${c[g.BUILDIDENTIFIER]}(?:\\.${c[g.BUILDIDENTIFIER]})*))`),r("FULLPLAIN",`v?${c[g.MAINVERSION]}${c[g.PRERELEASE]}?${c[g.BUILD]}?`),r("FULL",`^${c[g.FULLPLAIN]}$`),r("LOOSEPLAIN",`[v=\\s]*${c[g.MAINVERSIONLOOSE]}${c[g.PRERELEASELOOSE]}?${c[g.BUILD]}?`),r("LOOSE",`^${c[g.LOOSEPLAIN]}$`),r("GTLT","((?:<|>)?=?)"),r("XRANGEIDENTIFIERLOOSE",`${c[g.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),r("XRANGEIDENTIFIER",`${c[g.NUMERICIDENTIFIER]}|x|X|\\*`),r("XRANGEPLAIN",`[v=\\s]*(${c[g.XRANGEIDENTIFIER]})(?:\\.(${c[g.XRANGEIDENTIFIER]})(?:\\.(${c[g.XRANGEIDENTIFIER]})(?:${c[g.PRERELEASE]})?${c[g.BUILD]}?)?)?`),r("XRANGEPLAINLOOSE",`[v=\\s]*(${c[g.XRANGEIDENTIFIERLOOSE]})(?:\\.(${c[g.XRANGEIDENTIFIERLOOSE]})(?:\\.(${c[g.XRANGEIDENTIFIERLOOSE]})(?:${c[g.PRERELEASELOOSE]})?${c[g.BUILD]}?)?)?`),r("XRANGE",`^${c[g.GTLT]}\\s*${c[g.XRANGEPLAIN]}$`),r("XRANGELOOSE",`^${c[g.GTLT]}\\s*${c[g.XRANGEPLAINLOOSE]}$`),r("COERCE",`(^|[^\\d])(\\d{1,${l}})(?:\\.(\\d{1,${l}}))?(?:\\.(\\d{1,${l}}))?(?:$|[^\\d])`),r("COERCERTL",c[g.COERCE],!0),r("LONETILDE","(?:~>?)"),r("TILDETRIM",`(\\s*)${c[g.LONETILDE]}\\s+`,!0),t.tildeTrimReplace="$1~",r("TILDE",`^${c[g.LONETILDE]}${c[g.XRANGEPLAIN]}$`),r("TILDELOOSE",`^${c[g.LONETILDE]}${c[g.XRANGEPLAINLOOSE]}$`),r("LONECARET","(?:\\^)"),r("CARETTRIM",`(\\s*)${c[g.LONECARET]}\\s+`,!0),t.caretTrimReplace="$1^",r("CARET",`^${c[g.LONECARET]}${c[g.XRANGEPLAIN]}$`),r("CARETLOOSE",`^${c[g.LONECARET]}${c[g.XRANGEPLAINLOOSE]}$`),r("COMPARATORLOOSE",`^${c[g.GTLT]}\\s*(${c[g.LOOSEPLAIN]})$|^$`),r("COMPARATOR",`^${c[g.GTLT]}\\s*(${c[g.FULLPLAIN]})$|^$`),r("COMPARATORTRIM",`(\\s*)${c[g.GTLT]}\\s*(${c[g.LOOSEPLAIN]}|${c[g.XRANGEPLAIN]})`,!0),t.comparatorTrimReplace="$1$2$3",r("HYPHENRANGE",`^\\s*(${c[g.XRANGEPLAIN]})\\s+-\\s+(${c[g.XRANGEPLAIN]})\\s*$`),r("HYPHENRANGELOOSE",`^\\s*(${c[g.XRANGEPLAINLOOSE]})\\s+-\\s+(${c[g.XRANGEPLAINLOOSE]})\\s*$`),r("STAR","(<|>)?=?\\s*\\*"),r("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),r("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")})(Il,Il.exports);var Ct=Il.exports;const fI=Object.freeze({loose:!0}),bI=Object.freeze({}),EI=e=>e?typeof e!="object"?fI:e:bI;var al=EI;const Ql=/^[0-9]+$/,xn=(e,t)=>{const l=Ql.test(e),n=Ql.test(t);return l&&n&&(e=+e,t=+t),e===t?0:l&&!n?-1:n&&!l?1:e<t?-1:1},kI=(e,t)=>xn(t,e);var Gn={compareIdentifiers:xn,rcompareIdentifiers:kI};const dt=bt,{MAX_LENGTH:xl,MAX_SAFE_INTEGER:rt}=ft,{safeRe:Gl,t:Ml}=Ct,YI=al,{compareIdentifiers:Me}=Gn;let yI=class Re{constructor(t,l){if(l=YI(l),t instanceof Re){if(t.loose===!!l.loose&&t.includePrerelease===!!l.includePrerelease)return t;t=t.version}else if(typeof t!="string")throw new TypeError(`Invalid version. Must be a string. Got type "${typeof t}".`);if(t.length>xl)throw new TypeError(`version is longer than ${xl} characters`);dt("SemVer",t,l),this.options=l,this.loose=!!l.loose,this.includePrerelease=!!l.includePrerelease;const n=t.trim().match(l.loose?Gl[Ml.LOOSE]:Gl[Ml.FULL]);if(!n)throw new TypeError(`Invalid Version: ${t}`);if(this.raw=t,this.major=+n[1],this.minor=+n[2],this.patch=+n[3],this.major>rt||this.major<0)throw new TypeError("Invalid major version");if(this.minor>rt||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>rt||this.patch<0)throw new TypeError("Invalid patch version");n[4]?this.prerelease=n[4].split(".").map(i=>{if(/^[0-9]+$/.test(i)){const I=+i;if(I>=0&&I<rt)return I}return i}):this.prerelease=[],this.build=n[5]?n[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(t){if(dt("SemVer.compare",this.version,this.options,t),!(t instanceof Re)){if(typeof t=="string"&&t===this.version)return 0;t=new Re(t,this.options)}return t.version===this.version?0:this.compareMain(t)||this.comparePre(t)}compareMain(t){return t instanceof Re||(t=new Re(t,this.options)),Me(this.major,t.major)||Me(this.minor,t.minor)||Me(this.patch,t.patch)}comparePre(t){if(t instanceof Re||(t=new Re(t,this.options)),this.prerelease.length&&!t.prerelease.length)return-1;if(!this.prerelease.length&&t.prerelease.length)return 1;if(!this.prerelease.length&&!t.prerelease.length)return 0;let l=0;do{const n=this.prerelease[l],i=t.prerelease[l];if(dt("prerelease compare",l,n,i),n===void 0&&i===void 0)return 0;if(i===void 0)return 1;if(n===void 0)return-1;if(n===i)continue;return Me(n,i)}while(++l)}compareBuild(t){t instanceof Re||(t=new Re(t,this.options));let l=0;do{const n=this.build[l],i=t.build[l];if(dt("prerelease compare",l,n,i),n===void 0&&i===void 0)return 0;if(i===void 0)return 1;if(n===void 0)return-1;if(n===i)continue;return Me(n,i)}while(++l)}inc(t,l,n){switch(t){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",l,n);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",l,n);break;case"prepatch":this.prerelease.length=0,this.inc("patch",l,n),this.inc("pre",l,n);break;case"prerelease":this.prerelease.length===0&&this.inc("patch",l,n),this.inc("pre",l,n);break;case"major":(this.minor!==0||this.patch!==0||this.prerelease.length===0)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(this.patch!==0||this.prerelease.length===0)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":this.prerelease.length===0&&this.patch++,this.prerelease=[];break;case"pre":{const i=Number(n)?1:0;if(!l&&n===!1)throw new Error("invalid increment argument: identifier is empty");if(this.prerelease.length===0)this.prerelease=[i];else{let I=this.prerelease.length;for(;--I>=0;)typeof this.prerelease[I]=="number"&&(this.prerelease[I]++,I=-2);if(I===-1){if(l===this.prerelease.join(".")&&n===!1)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(i)}}if(l){let I=[l,i];n===!1&&(I=[l]),Me(this.prerelease[0],l)===0?isNaN(this.prerelease[1])&&(this.prerelease=I):this.prerelease=I}break}default:throw new Error(`invalid increment argument: ${t}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}};var ce=yI;const Bl=ce,QI=(e,t,l=!1)=>{if(e instanceof Bl)return e;try{return new Bl(e,t)}catch(n){if(!l)return null;throw n}};var He=QI;const xI=He,GI=(e,t)=>{const l=xI(e,t);return l?l.version:null};var MI=GI;const BI=He,jI=(e,t)=>{const l=BI(e.trim().replace(/^[=v]+/,""),t);return l?l.version:null};var KI=jI;const jl=ce,zI=(e,t,l,n,i)=>{typeof l=="string"&&(i=n,n=l,l=void 0);try{return new jl(e instanceof jl?e.version:e,l).inc(t,n,i).version}catch{return null}};var LI=zI;const Kl=He,wI=(e,t)=>{const l=Kl(e,null,!0),n=Kl(t,null,!0),i=l.compare(n);if(i===0)return null;const I=i>0,c=I?l:n,g=I?n:l,s=!!c.prerelease.length;if(!!g.prerelease.length&&!s)return!g.patch&&!g.minor?"major":c.patch?"patch":c.minor?"minor":"major";const V=s?"pre":"";return l.major!==n.major?V+"major":l.minor!==n.minor?V+"minor":l.patch!==n.patch?V+"patch":"prerelease"};var OI=wI;const DI=ce,PI=(e,t)=>new DI(e,t).major;var HI=PI;const vI=ce,qI=(e,t)=>new vI(e,t).minor;var $I=qI;const _I=ce,eg=(e,t)=>new _I(e,t).patch;var tg=eg;const lg=He,ng=(e,t)=>{const l=lg(e,t);return l&&l.prerelease.length?l.prerelease:null};var ig=ng;const zl=ce,Ig=(e,t,l)=>new zl(e,l).compare(new zl(t,l));var Se=Ig;const gg=Se,cg=(e,t,l)=>gg(t,e,l);var og=cg;const sg=Se,Cg=(e,t)=>sg(e,t,!0);var Vg=Cg;const Ll=ce,ag=(e,t,l)=>{const n=new Ll(e,l),i=new Ll(t,l);return n.compare(i)||n.compareBuild(i)};var dl=ag;const dg=dl,rg=(e,t)=>e.sort((l,n)=>dg(l,n,t));var Ag=rg;const Zg=dl,Ug=(e,t)=>e.sort((l,n)=>Zg(n,l,t));var Sg=Ug;const mg=Se,Wg=(e,t,l)=>mg(e,t,l)>0;var Et=Wg;const Rg=Se,hg=(e,t,l)=>Rg(e,t,l)<0;var rl=hg;const Ng=Se,Xg=(e,t,l)=>Ng(e,t,l)===0;var Mn=Xg;const Fg=Se,pg=(e,t,l)=>Fg(e,t,l)!==0;var Bn=pg;const Tg=Se,Jg=(e,t,l)=>Tg(e,t,l)>=0;var Al=Jg;const ug=Se,fg=(e,t,l)=>ug(e,t,l)<=0;var Zl=fg;const bg=Mn,Eg=Bn,kg=Et,Yg=Al,yg=rl,Qg=Zl,xg=(e,t,l,n)=>{switch(t){case"===":return typeof e=="object"&&(e=e.version),typeof l=="object"&&(l=l.version),e===l;case"!==":return typeof e=="object"&&(e=e.version),typeof l=="object"&&(l=l.version),e!==l;case"":case"=":case"==":return bg(e,l,n);case"!=":return Eg(e,l,n);case">":return kg(e,l,n);case">=":return Yg(e,l,n);case"<":return yg(e,l,n);case"<=":return Qg(e,l,n);default:throw new TypeError(`Invalid operator: ${t}`)}};var jn=xg;const Gg=ce,Mg=He,{safeRe:At,t:Zt}=Ct,Bg=(e,t)=>{if(e instanceof Gg)return e;if(typeof e=="number"&&(e=String(e)),typeof e!="string")return null;t=t||{};let l=null;if(!t.rtl)l=e.match(At[Zt.COERCE]);else{let n;for(;(n=At[Zt.COERCERTL].exec(e))&&(!l||l.index+l[0].length!==e.length);)(!l||n.index+n[0].length!==l.index+l[0].length)&&(l=n),At[Zt.COERCERTL].lastIndex=n.index+n[1].length+n[2].length;At[Zt.COERCERTL].lastIndex=-1}return l===null?null:Mg(`${l[2]}.${l[3]||"0"}.${l[4]||"0"}`,t)};var jg=Bg,Kt,wl;function Kg(){return wl||(wl=1,Kt=function(e){e.prototype[Symbol.iterator]=function*(){for(let t=this.head;t;t=t.next)yield t.value}}),Kt}var zg=L;L.Node=Qe;L.create=L;function L(e){var t=this;if(t instanceof L||(t=new L),t.tail=null,t.head=null,t.length=0,e&&typeof e.forEach=="function")e.forEach(function(i){t.push(i)});else if(arguments.length>0)for(var l=0,n=arguments.length;l<n;l++)t.push(arguments[l]);return t}L.prototype.removeNode=function(e){if(e.list!==this)throw new Error("removing node which does not belong to this list");var t=e.next,l=e.prev;return t&&(t.prev=l),l&&(l.next=t),e===this.head&&(this.head=t),e===this.tail&&(this.tail=l),e.list.length--,e.next=null,e.prev=null,e.list=null,t};L.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var t=this.head;e.list=this,e.next=t,t&&(t.prev=e),this.head=e,this.tail||(this.tail=e),this.length++}};L.prototype.pushNode=function(e){if(e!==this.tail){e.list&&e.list.removeNode(e);var t=this.tail;e.list=this,e.prev=t,t&&(t.next=e),this.tail=e,this.head||(this.head=e),this.length++}};L.prototype.push=function(){for(var e=0,t=arguments.length;e<t;e++)wg(this,arguments[e]);return this.length};L.prototype.unshift=function(){for(var e=0,t=arguments.length;e<t;e++)Og(this,arguments[e]);return this.length};L.prototype.pop=function(){if(this.tail){var e=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,e}};L.prototype.shift=function(){if(this.head){var e=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,e}};L.prototype.forEach=function(e,t){t=t||this;for(var l=this.head,n=0;l!==null;n++)e.call(t,l.value,n,this),l=l.next};L.prototype.forEachReverse=function(e,t){t=t||this;for(var l=this.tail,n=this.length-1;l!==null;n--)e.call(t,l.value,n,this),l=l.prev};L.prototype.get=function(e){for(var t=0,l=this.head;l!==null&&t<e;t++)l=l.next;if(t===e&&l!==null)return l.value};L.prototype.getReverse=function(e){for(var t=0,l=this.tail;l!==null&&t<e;t++)l=l.prev;if(t===e&&l!==null)return l.value};L.prototype.map=function(e,t){t=t||this;for(var l=new L,n=this.head;n!==null;)l.push(e.call(t,n.value,this)),n=n.next;return l};L.prototype.mapReverse=function(e,t){t=t||this;for(var l=new L,n=this.tail;n!==null;)l.push(e.call(t,n.value,this)),n=n.prev;return l};L.prototype.reduce=function(e,t){var l,n=this.head;if(arguments.length>1)l=t;else if(this.head)n=this.head.next,l=this.head.value;else throw new TypeError("Reduce of empty list with no initial value");for(var i=0;n!==null;i++)l=e(l,n.value,i),n=n.next;return l};L.prototype.reduceReverse=function(e,t){var l,n=this.tail;if(arguments.length>1)l=t;else if(this.tail)n=this.tail.prev,l=this.tail.value;else throw new TypeError("Reduce of empty list with no initial value");for(var i=this.length-1;n!==null;i--)l=e(l,n.value,i),n=n.prev;return l};L.prototype.toArray=function(){for(var e=new Array(this.length),t=0,l=this.head;l!==null;t++)e[t]=l.value,l=l.next;return e};L.prototype.toArrayReverse=function(){for(var e=new Array(this.length),t=0,l=this.tail;l!==null;t++)e[t]=l.value,l=l.prev;return e};L.prototype.slice=function(e,t){t=t||this.length,t<0&&(t+=this.length),e=e||0,e<0&&(e+=this.length);var l=new L;if(t<e||t<0)return l;e<0&&(e=0),t>this.length&&(t=this.length);for(var n=0,i=this.head;i!==null&&n<e;n++)i=i.next;for(;i!==null&&n<t;n++,i=i.next)l.push(i.value);return l};L.prototype.sliceReverse=function(e,t){t=t||this.length,t<0&&(t+=this.length),e=e||0,e<0&&(e+=this.length);var l=new L;if(t<e||t<0)return l;e<0&&(e=0),t>this.length&&(t=this.length);for(var n=this.length,i=this.tail;i!==null&&n>t;n--)i=i.prev;for(;i!==null&&n>e;n--,i=i.prev)l.push(i.value);return l};L.prototype.splice=function(e,t,...l){e>this.length&&(e=this.length-1),e<0&&(e=this.length+e);for(var n=0,i=this.head;i!==null&&n<e;n++)i=i.next;for(var I=[],n=0;i&&n<t;n++)I.push(i.value),i=this.removeNode(i);i===null&&(i=this.tail),i!==this.head&&i!==this.tail&&(i=i.prev);for(var n=0;n<l.length;n++)i=Lg(this,i,l[n]);return I};L.prototype.reverse=function(){for(var e=this.head,t=this.tail,l=e;l!==null;l=l.prev){var n=l.prev;l.prev=l.next,l.next=n}return this.head=t,this.tail=e,this};function Lg(e,t,l){var n=t===e.head?new Qe(l,null,t,e):new Qe(l,t,t.next,e);return n.next===null&&(e.tail=n),n.prev===null&&(e.head=n),e.length++,n}function wg(e,t){e.tail=new Qe(t,e.tail,null,e),e.head||(e.head=e.tail),e.length++}function Og(e,t){e.head=new Qe(t,null,e.head,e),e.tail||(e.tail=e.head),e.length++}function Qe(e,t,l,n){if(!(this instanceof Qe))return new Qe(e,t,l,n);this.list=n,this.value=e,t?(t.next=this,this.prev=t):this.prev=null,l?(l.prev=this,this.next=l):this.next=null}try{Kg()(L)}catch{}const Dg=zg,ke=Symbol("max"),Te=Symbol("length"),Be=Symbol("lengthCalculator"),it=Symbol("allowStale"),Ye=Symbol("maxAge"),pe=Symbol("dispose"),Ol=Symbol("noDisposeOnSet"),ee=Symbol("lruList"),Ae=Symbol("cache"),Kn=Symbol("updateAgeOnGet"),zt=()=>1;class Pg{constructor(t){if(typeof t=="number"&&(t={max:t}),t||(t={}),t.max&&(typeof t.max!="number"||t.max<0))throw new TypeError("max must be a non-negative number");this[ke]=t.max||1/0;const l=t.length||zt;if(this[Be]=typeof l!="function"?zt:l,this[it]=t.stale||!1,t.maxAge&&typeof t.maxAge!="number")throw new TypeError("maxAge must be a number");this[Ye]=t.maxAge||0,this[pe]=t.dispose,this[Ol]=t.noDisposeOnSet||!1,this[Kn]=t.updateAgeOnGet||!1,this.reset()}set max(t){if(typeof t!="number"||t<0)throw new TypeError("max must be a non-negative number");this[ke]=t||1/0,qe(this)}get max(){return this[ke]}set allowStale(t){this[it]=!!t}get allowStale(){return this[it]}set maxAge(t){if(typeof t!="number")throw new TypeError("maxAge must be a non-negative number");this[Ye]=t,qe(this)}get maxAge(){return this[Ye]}set lengthCalculator(t){typeof t!="function"&&(t=zt),t!==this[Be]&&(this[Be]=t,this[Te]=0,this[ee].forEach(l=>{l.length=this[Be](l.value,l.key),this[Te]+=l.length})),qe(this)}get lengthCalculator(){return this[Be]}get length(){return this[Te]}get itemCount(){return this[ee].length}rforEach(t,l){l=l||this;for(let n=this[ee].tail;n!==null;){const i=n.prev;Dl(this,t,n,l),n=i}}forEach(t,l){l=l||this;for(let n=this[ee].head;n!==null;){const i=n.next;Dl(this,t,n,l),n=i}}keys(){return this[ee].toArray().map(t=>t.key)}values(){return this[ee].toArray().map(t=>t.value)}reset(){this[pe]&&this[ee]&&this[ee].length&&this[ee].forEach(t=>this[pe](t.key,t.value)),this[Ae]=new Map,this[ee]=new Dg,this[Te]=0}dump(){return this[ee].map(t=>Tt(this,t)?!1:{k:t.key,v:t.value,e:t.now+(t.maxAge||0)}).toArray().filter(t=>t)}dumpLru(){return this[ee]}set(t,l,n){if(n=n||this[Ye],n&&typeof n!="number")throw new TypeError("maxAge must be a number");const i=n?Date.now():0,I=this[Be](l,t);if(this[Ae].has(t)){if(I>this[ke])return ze(this,this[Ae].get(t)),!1;const s=this[Ae].get(t).value;return this[pe]&&(this[Ol]||this[pe](t,s.value)),s.now=i,s.maxAge=n,s.value=l,this[Te]+=I-s.length,s.length=I,this.get(t),qe(this),!0}const c=new Hg(t,l,I,i,n);return c.length>this[ke]?(this[pe]&&this[pe](t,l),!1):(this[Te]+=c.length,this[ee].unshift(c),this[Ae].set(t,this[ee].head),qe(this),!0)}has(t){if(!this[Ae].has(t))return!1;const l=this[Ae].get(t).value;return!Tt(this,l)}get(t){return Lt(this,t,!0)}peek(t){return Lt(this,t,!1)}pop(){const t=this[ee].tail;return t?(ze(this,t),t.value):null}del(t){ze(this,this[Ae].get(t))}load(t){this.reset();const l=Date.now();for(let n=t.length-1;n>=0;n--){const i=t[n],I=i.e||0;if(I===0)this.set(i.k,i.v);else{const c=I-l;c>0&&this.set(i.k,i.v,c)}}}prune(){this[Ae].forEach((t,l)=>Lt(this,l,!1))}}const Lt=(e,t,l)=>{const n=e[Ae].get(t);if(n){const i=n.value;if(Tt(e,i)){if(ze(e,n),!e[it])return}else l&&(e[Kn]&&(n.value.now=Date.now()),e[ee].unshiftNode(n));return i.value}},Tt=(e,t)=>{if(!t||!t.maxAge&&!e[Ye])return!1;const l=Date.now()-t.now;return t.maxAge?l>t.maxAge:e[Ye]&&l>e[Ye]},qe=e=>{if(e[Te]>e[ke])for(let t=e[ee].tail;e[Te]>e[ke]&&t!==null;){const l=t.prev;ze(e,t),t=l}},ze=(e,t)=>{if(t){const l=t.value;e[pe]&&e[pe](l.key,l.value),e[Te]-=l.length,e[Ae].delete(l.key),e[ee].removeNode(t)}};class Hg{constructor(t,l,n,i,I){this.key=t,this.value=l,this.length=n,this.now=i,this.maxAge=I||0}}const Dl=(e,t,l,n)=>{let i=l.value;Tt(e,i)&&(ze(e,l),e[it]||(i=void 0)),i&&t.call(n,i.value,i.key,e)};var vg=Pg,wt,Pl;function me(){if(Pl)return wt;Pl=1;class e{constructor(S,k){if(k=n(k),S instanceof e)return S.loose===!!k.loose&&S.includePrerelease===!!k.includePrerelease?S:new e(S.raw,k);if(S instanceof i)return this.raw=S.value,this.set=[[S]],this.format(),this;if(this.options=k,this.loose=!!k.loose,this.includePrerelease=!!k.includePrerelease,this.raw=S.trim().split(/\s+/).join(" "),this.set=this.raw.split("||").map(b=>this.parseRange(b)).filter(b=>b.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const b=this.set[0];if(this.set=this.set.filter(E=>!O(E[0])),this.set.length===0)this.set=[b];else if(this.set.length>1){for(const E of this.set)if(E.length===1&&D(E[0])){this.set=[E];break}}}this.format()}format(){return this.range=this.set.map(S=>S.join(" ").trim()).join("||").trim(),this.range}toString(){return this.range}parseRange(S){const b=((this.options.includePrerelease&&T)|(this.options.loose&&R))+":"+S,E=l.get(b);if(E)return E;const u=this.options.loose,y=u?g[s.HYPHENRANGELOOSE]:g[s.HYPHENRANGE];S=S.replace(y,We(this.options.includePrerelease)),I("hyphen replace",S),S=S.replace(g[s.COMPARATORTRIM],r),I("comparator trim",S),S=S.replace(g[s.TILDETRIM],V),S=S.replace(g[s.CARETTRIM],Z);let j=S.split(" ").map(F=>w(F,this.options)).join(" ").split(/\s+/).map(F=>h(F,this.options));u&&(j=j.filter(F=>(I("loose invalid filter",F,this.options),!!F.match(g[s.COMPARATORLOOSE])))),I("range list",j);const Q=new Map,M=j.map(F=>new i(F,this.options));for(const F of M){if(O(F))return[F];Q.set(F.value,F)}Q.size>1&&Q.has("")&&Q.delete("");const v=[...Q.values()];return l.set(b,v),v}intersects(S,k){if(!(S instanceof e))throw new TypeError("a Range is required");return this.set.some(b=>d(b,k)&&S.set.some(E=>d(E,k)&&b.every(u=>E.every(y=>u.intersects(y,k)))))}test(S){if(!S)return!1;if(typeof S=="string")try{S=new c(S,this.options)}catch{return!1}for(let k=0;k<this.set.length;k++)if(z(this.set[k],S,this.options))return!0;return!1}}wt=e;const t=vg,l=new t({max:1e3}),n=al,i=kt(),I=bt,c=ce,{safeRe:g,t:s,comparatorTrimReplace:r,tildeTrimReplace:V,caretTrimReplace:Z}=Ct,{FLAG_INCLUDE_PRERELEASE:T,FLAG_LOOSE:R}=ft,O=N=>N.value==="<0.0.0-0",D=N=>N.value==="",d=(N,S)=>{let k=!0;const b=N.slice();let E=b.pop();for(;k&&b.length;)k=b.every(u=>E.intersects(u,S)),E=b.pop();return k},w=(N,S)=>(I("comp",N,S),N=G(N,S),I("caret",N),N=B(N,S),I("tildes",N),N=X(N,S),I("xrange",N),N=m(N,S),I("stars",N),N),x=N=>!N||N.toLowerCase()==="x"||N==="*",B=(N,S)=>N.trim().split(/\s+/).map(k=>P(k,S)).join(" "),P=(N,S)=>{const k=S.loose?g[s.TILDELOOSE]:g[s.TILDE];return N.replace(k,(b,E,u,y,j)=>{I("tilde",N,b,E,u,y,j);let Q;return x(E)?Q="":x(u)?Q=`>=${E}.0.0 <${+E+1}.0.0-0`:x(y)?Q=`>=${E}.${u}.0 <${E}.${+u+1}.0-0`:j?(I("replaceTilde pr",j),Q=`>=${E}.${u}.${y}-${j} <${E}.${+u+1}.0-0`):Q=`>=${E}.${u}.${y} <${E}.${+u+1}.0-0`,I("tilde return",Q),Q})},G=(N,S)=>N.trim().split(/\s+/).map(k=>Ce(k,S)).join(" "),Ce=(N,S)=>{I("caret",N,S);const k=S.loose?g[s.CARETLOOSE]:g[s.CARET],b=S.includePrerelease?"-0":"";return N.replace(k,(E,u,y,j,Q)=>{I("caret",N,E,u,y,j,Q);let M;return x(u)?M="":x(y)?M=`>=${u}.0.0${b} <${+u+1}.0.0-0`:x(j)?u==="0"?M=`>=${u}.${y}.0${b} <${u}.${+y+1}.0-0`:M=`>=${u}.${y}.0${b} <${+u+1}.0.0-0`:Q?(I("replaceCaret pr",Q),u==="0"?y==="0"?M=`>=${u}.${y}.${j}-${Q} <${u}.${y}.${+j+1}-0`:M=`>=${u}.${y}.${j}-${Q} <${u}.${+y+1}.0-0`:M=`>=${u}.${y}.${j}-${Q} <${+u+1}.0.0-0`):(I("no pr"),u==="0"?y==="0"?M=`>=${u}.${y}.${j}${b} <${u}.${y}.${+j+1}-0`:M=`>=${u}.${y}.${j}${b} <${u}.${+y+1}.0-0`:M=`>=${u}.${y}.${j} <${+u+1}.0.0-0`),I("caret return",M),M})},X=(N,S)=>(I("replaceXRanges",N,S),N.split(/\s+/).map(k=>Y(k,S)).join(" ")),Y=(N,S)=>{N=N.trim();const k=S.loose?g[s.XRANGELOOSE]:g[s.XRANGE];return N.replace(k,(b,E,u,y,j,Q)=>{I("xRange",N,b,E,u,y,j,Q);const M=x(u),v=M||x(y),F=v||x(j),ae=F;return E==="="&&ae&&(E=""),Q=S.includePrerelease?"-0":"",M?E===">"||E==="<"?b="<0.0.0-0":b="*":E&&ae?(v&&(y=0),j=0,E===">"?(E=">=",v?(u=+u+1,y=0,j=0):(y=+y+1,j=0)):E==="<="&&(E="<",v?u=+u+1:y=+y+1),E==="<"&&(Q="-0"),b=`${E+u}.${y}.${j}${Q}`):v?b=`>=${u}.0.0${Q} <${+u+1}.0.0-0`:F&&(b=`>=${u}.${y}.0${Q} <${u}.${+y+1}.0-0`),I("xRange return",b),b})},m=(N,S)=>(I("replaceStars",N,S),N.trim().replace(g[s.STAR],"")),h=(N,S)=>(I("replaceGTE0",N,S),N.trim().replace(g[S.includePrerelease?s.GTE0PRE:s.GTE0],"")),We=N=>(S,k,b,E,u,y,j,Q,M,v,F,ae,le)=>(x(b)?k="":x(E)?k=`>=${b}.0.0${N?"-0":""}`:x(u)?k=`>=${b}.${E}.0${N?"-0":""}`:y?k=`>=${k}`:k=`>=${k}${N?"-0":""}`,x(M)?Q="":x(v)?Q=`<${+M+1}.0.0-0`:x(F)?Q=`<${M}.${+v+1}.0-0`:ae?Q=`<=${M}.${v}.${F}-${ae}`:N?Q=`<${M}.${v}.${+F+1}-0`:Q=`<=${Q}`,`${k} ${Q}`.trim()),z=(N,S,k)=>{for(let b=0;b<N.length;b++)if(!N[b].test(S))return!1;if(S.prerelease.length&&!k.includePrerelease){for(let b=0;b<N.length;b++)if(I(N[b].semver),N[b].semver!==i.ANY&&N[b].semver.prerelease.length>0){const E=N[b].semver;if(E.major===S.major&&E.minor===S.minor&&E.patch===S.patch)return!0}return!1}return!0};return wt}var Ot,Hl;function kt(){if(Hl)return Ot;Hl=1;const e=Symbol("SemVer ANY");class t{static get ANY(){return e}constructor(V,Z){if(Z=l(Z),V instanceof t){if(V.loose===!!Z.loose)return V;V=V.value}V=V.trim().split(/\s+/).join(" "),c("comparator",V,Z),this.options=Z,this.loose=!!Z.loose,this.parse(V),this.semver===e?this.value="":this.value=this.operator+this.semver.version,c("comp",this)}parse(V){const Z=this.options.loose?n[i.COMPARATORLOOSE]:n[i.COMPARATOR],T=V.match(Z);if(!T)throw new TypeError(`Invalid comparator: ${V}`);this.operator=T[1]!==void 0?T[1]:"",this.operator==="="&&(this.operator=""),T[2]?this.semver=new g(T[2],this.options.loose):this.semver=e}toString(){return this.value}test(V){if(c("Comparator.test",V,this.options.loose),this.semver===e||V===e)return!0;if(typeof V=="string")try{V=new g(V,this.options)}catch{return!1}return I(V,this.operator,this.semver,this.options)}intersects(V,Z){if(!(V instanceof t))throw new TypeError("a Comparator is required");return this.operator===""?this.value===""?!0:new s(V.value,Z).test(this.value):V.operator===""?V.value===""?!0:new s(this.value,Z).test(V.semver):(Z=l(Z),Z.includePrerelease&&(this.value==="<0.0.0-0"||V.value==="<0.0.0-0")||!Z.includePrerelease&&(this.value.startsWith("<0.0.0")||V.value.startsWith("<0.0.0"))?!1:!!(this.operator.startsWith(">")&&V.operator.startsWith(">")||this.operator.startsWith("<")&&V.operator.startsWith("<")||this.semver.version===V.semver.version&&this.operator.includes("=")&&V.operator.includes("=")||I(this.semver,"<",V.semver,Z)&&this.operator.startsWith(">")&&V.operator.startsWith("<")||I(this.semver,">",V.semver,Z)&&this.operator.startsWith("<")&&V.operator.startsWith(">")))}}Ot=t;const l=al,{safeRe:n,t:i}=Ct,I=jn,c=bt,g=ce,s=me();return Ot}const qg=me(),$g=(e,t,l)=>{try{t=new qg(t,l)}catch{return!1}return t.test(e)};var Yt=$g;const _g=me(),ec=(e,t)=>new _g(e,t).set.map(l=>l.map(n=>n.value).join(" ").trim().split(" "));var tc=ec;const lc=ce,nc=me(),ic=(e,t,l)=>{let n=null,i=null,I=null;try{I=new nc(t,l)}catch{return null}return e.forEach(c=>{I.test(c)&&(!n||i.compare(c)===-1)&&(n=c,i=new lc(n,l))}),n};var Ic=ic;const gc=ce,cc=me(),oc=(e,t,l)=>{let n=null,i=null,I=null;try{I=new cc(t,l)}catch{return null}return e.forEach(c=>{I.test(c)&&(!n||i.compare(c)===1)&&(n=c,i=new gc(n,l))}),n};var sc=oc;const Dt=ce,Cc=me(),vl=Et,Vc=(e,t)=>{e=new Cc(e,t);let l=new Dt("0.0.0");if(e.test(l)||(l=new Dt("0.0.0-0"),e.test(l)))return l;l=null;for(let n=0;n<e.set.length;++n){const i=e.set[n];let I=null;i.forEach(c=>{const g=new Dt(c.semver.version);switch(c.operator){case">":g.prerelease.length===0?g.patch++:g.prerelease.push(0),g.raw=g.format();case"":case">=":(!I||vl(g,I))&&(I=g);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${c.operator}`)}}),I&&(!l||vl(l,I))&&(l=I)}return l&&e.test(l)?l:null};var ac=Vc;const dc=me(),rc=(e,t)=>{try{return new dc(e,t).range||"*"}catch{return null}};var Ac=rc;const Zc=ce,zn=kt(),{ANY:Uc}=zn,Sc=me(),mc=Yt,ql=Et,$l=rl,Wc=Zl,Rc=Al,hc=(e,t,l,n)=>{e=new Zc(e,n),t=new Sc(t,n);let i,I,c,g,s;switch(l){case">":i=ql,I=Wc,c=$l,g=">",s=">=";break;case"<":i=$l,I=Rc,c=ql,g="<",s="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(mc(e,t,n))return!1;for(let r=0;r<t.set.length;++r){const V=t.set[r];let Z=null,T=null;if(V.forEach(R=>{R.semver===Uc&&(R=new zn(">=0.0.0")),Z=Z||R,T=T||R,i(R.semver,Z.semver,n)?Z=R:c(R.semver,T.semver,n)&&(T=R)}),Z.operator===g||Z.operator===s||(!T.operator||T.operator===g)&&I(e,T.semver))return!1;if(T.operator===s&&c(e,T.semver))return!1}return!0};var Ul=hc;const Nc=Ul,Xc=(e,t,l)=>Nc(e,t,">",l);var Fc=Xc;const pc=Ul,Tc=(e,t,l)=>pc(e,t,"<",l);var Jc=Tc;const _l=me(),uc=(e,t,l)=>(e=new _l(e,l),t=new _l(t,l),e.intersects(t,l));var fc=uc;const bc=Yt,Ec=Se;var kc=(e,t,l)=>{const n=[];let i=null,I=null;const c=e.sort((V,Z)=>Ec(V,Z,l));for(const V of c)bc(V,t,l)?(I=V,i||(i=V)):(I&&n.push([i,I]),I=null,i=null);i&&n.push([i,null]);const g=[];for(const[V,Z]of n)V===Z?g.push(V):!Z&&V===c[0]?g.push("*"):Z?V===c[0]?g.push(`<=${Z}`):g.push(`${V} - ${Z}`):g.push(`>=${V}`);const s=g.join(" || "),r=typeof t.raw=="string"?t.raw:String(t);return s.length<r.length?s:t};const en=me(),Sl=kt(),{ANY:Pt}=Sl,$e=Yt,ml=Se,Yc=(e,t,l={})=>{if(e===t)return!0;e=new en(e,l),t=new en(t,l);let n=!1;e:for(const i of e.set){for(const I of t.set){const c=Qc(i,I,l);if(n=n||c!==null,c)continue e}if(n)return!1}return!0},yc=[new Sl(">=0.0.0-0")],tn=[new Sl(">=0.0.0")],Qc=(e,t,l)=>{if(e===t)return!0;if(e.length===1&&e[0].semver===Pt){if(t.length===1&&t[0].semver===Pt)return!0;l.includePrerelease?e=yc:e=tn}if(t.length===1&&t[0].semver===Pt){if(l.includePrerelease)return!0;t=tn}const n=new Set;let i,I;for(const R of e)R.operator===">"||R.operator===">="?i=ln(i,R,l):R.operator==="<"||R.operator==="<="?I=nn(I,R,l):n.add(R.semver);if(n.size>1)return null;let c;if(i&&I){if(c=ml(i.semver,I.semver,l),c>0)return null;if(c===0&&(i.operator!==">="||I.operator!=="<="))return null}for(const R of n){if(i&&!$e(R,String(i),l)||I&&!$e(R,String(I),l))return null;for(const O of t)if(!$e(R,String(O),l))return!1;return!0}let g,s,r,V,Z=I&&!l.includePrerelease&&I.semver.prerelease.length?I.semver:!1,T=i&&!l.includePrerelease&&i.semver.prerelease.length?i.semver:!1;Z&&Z.prerelease.length===1&&I.operator==="<"&&Z.prerelease[0]===0&&(Z=!1);for(const R of t){if(V=V||R.operator===">"||R.operator===">=",r=r||R.operator==="<"||R.operator==="<=",i){if(T&&R.semver.prerelease&&R.semver.prerelease.length&&R.semver.major===T.major&&R.semver.minor===T.minor&&R.semver.patch===T.patch&&(T=!1),R.operator===">"||R.operator===">="){if(g=ln(i,R,l),g===R&&g!==i)return!1}else if(i.operator===">="&&!$e(i.semver,String(R),l))return!1}if(I){if(Z&&R.semver.prerelease&&R.semver.prerelease.length&&R.semver.major===Z.major&&R.semver.minor===Z.minor&&R.semver.patch===Z.patch&&(Z=!1),R.operator==="<"||R.operator==="<="){if(s=nn(I,R,l),s===R&&s!==I)return!1}else if(I.operator==="<="&&!$e(I.semver,String(R),l))return!1}if(!R.operator&&(I||i)&&c!==0)return!1}return!(i&&r&&!I&&c!==0||I&&V&&!i&&c!==0||T||Z)},ln=(e,t,l)=>{if(!e)return t;const n=ml(e.semver,t.semver,l);return n>0?e:n<0||t.operator===">"&&e.operator===">="?t:e},nn=(e,t,l)=>{if(!e)return t;const n=ml(e.semver,t.semver,l);return n<0?e:n>0||t.operator==="<"&&e.operator==="<="?t:e};var xc=Yc;const Ht=Ct,In=ft,Gc=ce,gn=Gn,Mc=He,Bc=MI,jc=KI,Kc=LI,zc=OI,Lc=HI,wc=$I,Oc=tg,Dc=ig,Pc=Se,Hc=og,vc=Vg,qc=dl,$c=Ag,_c=Sg,eo=Et,to=rl,lo=Mn,no=Bn,io=Al,Io=Zl,go=jn,co=jg,oo=kt(),so=me(),Co=Yt,Vo=tc,ao=Ic,ro=sc,Ao=ac,Zo=Ac,Uo=Ul,So=Fc,mo=Jc,Wo=fc,Ro=kc,ho=xc;var No={parse:Mc,valid:Bc,clean:jc,inc:Kc,diff:zc,major:Lc,minor:wc,patch:Oc,prerelease:Dc,compare:Pc,rcompare:Hc,compareLoose:vc,compareBuild:qc,sort:$c,rsort:_c,gt:eo,lt:to,eq:lo,neq:no,gte:io,lte:Io,cmp:go,coerce:co,Comparator:oo,Range:so,satisfies:Co,toComparators:Vo,maxSatisfying:ao,minSatisfying:ro,minVersion:Ao,validRange:Zo,outside:Uo,gtr:So,ltr:mo,intersects:Wo,simplifyRange:Ro,subset:ho,SemVer:Gc,re:Ht.re,src:Ht.src,tokens:Ht.t,SEMVER_SPEC_VERSION:In.SEMVER_SPEC_VERSION,RELEASE_TYPES:In.RELEASE_TYPES,compareIdentifiers:gn.compareIdentifiers,rcompareIdentifiers:gn.rcompareIdentifiers},Xo=No;const Fo=NI(Xo);async function po(e){e=e??"pandoc";let t=await $t(`${e} --version`);return t=t.substring(0,t.indexOf(`
`)).replace("pandoc.exe","").replace("pandoc","").trim(),Fo.parse(t)}const cn=Ue('<div class="modal-button-container">'),To=e=>{const{plugin:t,lang:l}=e,[n,i]=RI(t.settings),[I,c]=se(),g=ne(()=>Object.entries(fe(n.env)??{}).map(([X,Y])=>`${X}="${Y}"`).join(`
`)),s=(...X)=>{i(...X),t.saveSettings()},r=X=>{try{const Y={};for(let m of X.split(`
`)){m=m.trim();const h=m.indexOf("=");if(h>0){const We=m.substring(0,h);let z=m.substring(h+1).trim();z.startsWith('"')&&z.endsWith('"')&&(z=z.substring(1,z.length-1)),Y[We]=z}}s("env",Ke(n.env??{},Y))}catch(Y){alert(Y)}},V=ne(()=>n.items.find(X=>X.name===n.lastEditName)??n.items.first()),Z=X=>{const Y=V();return X===void 0||X===Y.type?Y:void 0},T=ne(()=>fe(n.customDefaultExportDirectory)),R=X=>{const Y=n.items.findIndex(m=>m.name===n.lastEditName);s("items",Y===-1?0:Y,hI(m=>(X(m),m)))},O=ne(()=>{const X=I();return X?l.settingTab.version(X):l.settingTab.pandocNotFound}),[D,d]=se(),w=()=>{const[X,Y]=se(Object.keys(Ut)[0]),[m,h]=se(),We=()=>{const z=JSON.parse(JSON.stringify(Ut[X()]));z.name=m(),St(()=>{s("items",N=>[...N,z]),s("lastEditName",z.name)}),d(void 0)};return U(ll,{app,get title(){return l.settingTab.new},onClose:()=>d(void 0),get children(){return[U(K,{get name(){return l.settingTab.template},get children(){return U(nt,{get options(){return Object.entries(Ut).map(([z,N])=>({name:N.name,value:z}))},get selected(){return m()??X()},onChange:z=>Y(z)})}}),U(K,{get name(){return l.settingTab.name},get children(){return U(Ve,{get value(){return m()??""},onChange:z=>h(z)})}}),(()=>{const z=cn();return oe(z,U(nl,{cta:!0,onClick:We,get children(){return l.settingTab.save}})),z})()]}})},x=()=>{const[X,Y]=se(Z().name),m=()=>{St(()=>{R(h=>h.name=X()),s("lastEditName",X())}),d(void 0)};return U(ll,{app,get title(){return l.settingTab.rename},onClose:()=>d(void 0),get children(){return[U(K,{get name(){return l.settingTab.name},get children(){return U(Ve,{get value(){return X()??""},onChange:h=>Y(h)})}}),(()=>{const h=cn();return oe(h,U(nl,{cta:!0,onClick:m,get children(){return l.settingTab.add}})),h})()]}})},B=()=>{const X=()=>Z("pandoc"),Y=m=>{R(h=>h.type==="pandoc"?m(h):void 0)};return[U(K,{get name(){return l.settingTab.arguments},get children(){return U(Ve,{style:"width: 100%",get value(){return X().arguments??""},onChange:m=>Y(h=>h.arguments=m)})}}),U(K,{get name(){return l.settingTab.extraArguments},get children(){return U(Ve,{style:"width: 100%",get value(){return X().customArguments??""},get title(){return X().customArguments},onChange:m=>Y(h=>h.customArguments=m)})}}),U(K,{get name(){return l.settingTab.afterExport},heading:!0}),U(K,{get name(){return l.settingTab.openExportedFileLocation},get children(){return U(he,{get checked(){return X().openExportedFileLocation??!1},onChange:m=>Y(h=>h.openExportedFileLocation=m)})}}),U(K,{get name(){return l.settingTab.openExportedFile},get children(){return U(he,{get checked(){return X().openExportedFile??!1},onChange:m=>Y(h=>h.openExportedFile=m)})}}),U(K,{get name(){return l.settingTab.runCommand},get children(){return U(he,{get checked(){return X().runCommand},onChange:m=>Y(h=>h.runCommand=m)})}}),U(mt,{get when(){return X().runCommand},get children(){return U(K,{get children(){return U(Ve,{style:"width: 100%",get value(){return X().command??""},onChange:m=>Y(h=>h.command=m)})}})}})]},P=()=>{const X=()=>Z("custom"),Y=m=>{R(h=>h.type==="custom"?m(h):void 0)};return[U(K,{get name(){return l.settingTab.command},get children(){return U(Ve,{style:"width: 100%",get value(){return X().command},onChange:m=>Y(h=>h.command=m)})}}),U(K,{get name(){return l.settingTab.targetFileExtensions},get children(){return U(Ve,{get value(){return X().targetFileExtensions??""},onChange:m=>Y(h=>h.targetFileExtensions=m)})}}),U(K,{get name(){return l.settingTab.afterExport},heading:!0}),U(K,{get name(){return l.settingTab.showCommandOutput},get children(){return U(he,{get checked(){return X().showCommandOutput??!1},onChange:m=>Y(h=>h.showCommandOutput=m)})}}),U(K,{get name(){return l.settingTab.openExportedFileLocation},get children(){return U(he,{get checked(){return X().openExportedFileLocation??!1},onChange:m=>Y(h=>h.openExportedFileLocation=m)})}}),U(K,{get name(){return l.settingTab.openExportedFile},get children(){return U(he,{get checked(){return X().openExportedFile??!1},onChange:m=>Y(h=>h.openExportedFile=m)})}})]},G=async()=>{await t.resetSettings(),s(t.settings)},Ce=async()=>{const X=await ye.remote.dialog.showOpenDialog({defaultPath:T()??ye.remote.app.getPath("documents"),properties:["createDirectory","openDirectory"]});!X.canceled&&X.filePaths.length>0&&s("customDefaultExportDirectory",Y=>Ke(Y,X.filePaths[0]))};return be(async()=>{try{c((await po(fe(n.pandocPath))).version)}catch{c(void 0)}}),[U(K,{get name(){return l.settingTab.general},heading:!0,get children(){return U(je,{icon:"reset",onClick:G})}}),U(K,{get name(){return l.settingTab.pandocPath},get description(){return O()},get children(){return U(Ve,{get placeholder(){return l.settingTab.pandocPathPlaceholder},get value(){return fe(n.pandocPath)??""},onChange:X=>s("pandocPath",Y=>Ke(Y,X))})}}),U(K,{get name(){return l.settingTab.defaultFolderForExportedFile},get children(){return U(nt,{get options(){return[{name:l.settingTab.auto,value:"Auto"},{name:l.settingTab.sameFolderWithCurrentFile,value:"Same"},{name:l.settingTab.customLocation,value:"Custom"}]},onChange:X=>s("defaultExportDirectoryMode",X)})}}),U(mt,{get when(){return n.defaultExportDirectoryMode==="Custom"},get children(){return U(K,{get children(){return[U(Ve,{get value(){return T()??""},get title(){return T()}}),U(je,{icon:"folder",onClick:Ce})]}})}}),U(K,{get name(){return l.settingTab.openExportedFileLocation},get children(){return U(he,{get checked(){return n.openExportedFileLocation},onChange:X=>s("openExportedFileLocation",X)})}}),U(K,{get name(){return l.settingTab.openExportedFile},get children(){return U(he,{get checked(){return n.openExportedFile},onChange:X=>s("openExportedFile",X)})}}),U(K,{get name(){return l.settingTab.editCommandTemplate},heading:!0}),U(K,{get name(){return l.settingTab.chooseCommandTemplate},get children(){return[U(nt,{get options(){return n.items.map(X=>({name:X.name,value:X.name}))},get selected(){return n.lastEditName},onChange:X=>s("lastEditName",X)}),U(je,{icon:"plus",get tooltip(){return l.settingTab.add},onClick:()=>d(()=>w)}),U(je,{icon:"pencil",get tooltip(){return l.settingTab.rename},onClick:()=>d(()=>x)}),U(je,{icon:"trash",get tooltip(){return l.settingTab.remove},onClick:()=>St(()=>{var X;s("items",Y=>Y.filter(m=>{var h;return m.name!==((h=Z())==null?void 0:h.name)})),s("lastEditName",(X=n.items.first())==null?void 0:X.name)})})]}}),U(Ti,{get children(){return[U(Tl,{get when(){return Z("pandoc")},get children(){return U(B,{})}}),U(Tl,{get when(){return Z("custom")},get children(){return U(P,{})}})]}}),U(K,{get name(){return l.settingTab.advanced},heading:!0}),U(K,{get name(){return l.settingTab.environmentVariables},get description(){return l.settingTab.environmentVariablesDesc},get children(){return U(CI,{style:"width: 100%;height: 5em",get value(){return g()},onChange:r})}}),U(mt,{get when(){return D()},get children(){return U(Oi,{get component(){return D()},ref:X=>document.body.appendChild(X)})}})]};var gt;class Jo extends Ze.PluginSettingTab{constructor(l){super(l.app,l);hl(this,gt,void 0);this.plugin=l,this.name=this.plugin.lang.settingTab.title}get lang(){return this.plugin.lang}display(){Nl(this,gt,lt(l=>{const n=this;return oe(this.containerEl,U(To,{get plugin(){return n.plugin},get lang(){return n.lang}})),ct(()=>{this.containerEl.empty()}),l}))}hide(){Rl(this,gt).call(this)}}gt=new WeakMap;const vt=Object.fromEntries(Object.entries(Object.assign({"/lua/citefilter.lua":_n,"/lua/markdown+hugo.lua":ti,"/lua/markdown.lua":ni,"/lua/math_block.lua":Ii,"/lua/pdf.lua":ci,"/lua/polyfill.lua":si,"/lua/url.lua":Vi,"/lua/utf8_filenames.lua":di})).map(([e,t])=>[e.substring(4),t.default]));class uo extends Ze.Plugin{constructor(t,l){super(t,l),this.lang=Jn.current,this.saveSettings=Ze.debounce(this.saveSettings.bind(this),1e3,!0)}async onload(){await this.releaseLuaScripts(),await this.loadSettings();const{lang:t}=this;this.addSettingTab(new Jo(this)),this.addCommand({id:"obsidian-enhancing-export:export",name:t.exportToOo,icon:"document",callback:()=>{const l=this.app.workspace.getActiveFile();l?jt.show(this,l):new Ze.Notice(t.pleaseOpenFile,2e3)}}),this.addCommand({id:"obsidian-enhancing-export:export-with-previous",name:t.exportWithPrevious,icon:"document",callback:async()=>{const l=this.app.workspace.getActiveFile();if(l){if(this.settings.lastExportType&&this.settings.lastExportDirectory){const n=this.settings.items.find(i=>i.name===this.settings.lastExportType);if(n){await un(this,l,fe(this.settings.lastExportDirectory),void 0,n);return}}jt.show(this,l)}else new Ze.Notice(t.pleaseOpenFile,2e3)}}),this.registerEvent(this.app.workspace.on("file-menu",(l,n)=>{n instanceof Ze.TFile&&l.addItem(i=>{i.setTitle(t.exportToOo).setIcon("document").onClick(()=>{jt.show(this,n)})}).addSeparator()}))}async resetSettings(){this.settings={...JSON.parse(JSON.stringify(ve)),lastExportDirectory:this.settings.lastExportDirectory},await this.saveSettings()}async loadSettings(){const t=Object.assign({},ve,await this.loadData());t.items.forEach(l=>{Object.assign(l,ve.items.find(n=>n.name===l.name)??{},l)});for(const l of ve.items)t.items.every(n=>n.name!==l.name)&&t.items.push(l);this.settings=t}async saveSettings(){console.log("[obsidian-enhancing-export] saveSettings",this.settings);const t=JSON.parse(JSON.stringify(this.settings));t.items.forEach(l=>{const n=ve.items.find(i=>i.name===l.name);n&&Object.keys(l).forEach(i=>{i!=="name"&&l[i]===n[i]&&delete l[i]})}),await this.saveData(t)}async releaseLuaScripts(){const{adapter:t}=this.app.vault,l=`${this.manifest.dir}/lua`;await t.mkdir(l);for(const n of Object.keys(vt)){const i=`${l}/${n}`;await t.writeBinary(i,vt[n]),delete vt[n]}}}exports.default=uo;

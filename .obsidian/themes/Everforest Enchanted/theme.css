/**---------------------**
*!  Obsidian Everforest
*?
*? 1. Variables
*?   - Fonts
*?   - Implementation
*? 2. Themes
*?   - Dark
*?   - Light
*? 2. General UI
*?   - Workspace
*? 4. Markdown
*?   - Emphasis
*?   - Code
*?   - Links
*?   - Lists
*?   - Blockquotes
*?   - Tables
*?   - Tags
*?   - Embeds
*?   - YAML
*?   - Graph
*? 5. Cursor
*? 6. Extra Fixes
*?   - Callouts
*?   - Image Formatting
*?   - Misc.
*?
 **---------------------**/



/**** Implementation ****/


body:is(.theme-dark, .theme-light) {

  /** Miscellaneous **/

  --checkbox-size: 1.125em;

  --list-indent: 24px;

  /** Backgrounds **/

  --background-modifier-border: var(--bg5);
  --background-embed: var(--bg1);
  --blockquote-background-color: var(--background-embed);

  --background-primary:       var(--bg0);
  --background-primary-alt:   var(--bg0);
  --background-secondary:     var(--bg0);
  --background-secondary-alt: var(--bg0);

  --text-normal:              var(--fg);
  --text-muted:               var(--color-base-70);
  --text-faint:               var(--grey1);
  --text-selection:           var(--bg-visual);

  --text-link:                var(--header-aqua);
  --text-link-hover:          var(--fg-aqua);
  --text-link-external:       var(--header-blue);
  --text-link-external-hover: var(--fg-blue);
  --text-accent:              var(--header-blue);
  --text-accent-hover:        var(--header-purple);

  --code-header: #0004;
  --code-background: var(--bg-dim);
  --code-normal: var(--text-muted);
  --code-inline: var(--fg-blue);

  --table-background: var(--bg2);
  --table-column-alt-background: unset;
  --table-row-alt-background: var(--bg1);
  --table-header-background: var(--bg-green);
  --table-header-background-hover: var(--bg-green);
  --table-row-background-hover: var(--bg4);
  
  --interactive-before: var(--bg4);
  --interactive-hover: var(--fg-aqua);
  --interactive-accent: var(--header-aqua);
  --interactive-accent-hover: var(--header-blue);
  
  --text-highlight-bg: var(--bg-yellow);

  --heading-formatting: ;

  --h1-color: var(--header-red);
  --h2-color: var(--header-orange);
  --h3-color: var(--header-yellow);
  --h4-color: var(--header-green);
  --h5-color: var(--header-blue);
  --h6-color: var(--header-purple);

  --h1-size: 2.125rem;
  --h2-size: 1.625rem;
  --h3-size: 1.375rem;
  --h4-size: 1.250rem;
  --h5-size: 1.125rem;
  --h6-size: 1.000rem;

  --h1-weight: 500;
  --h2-weight: 500;
  --h3-weight: 500;
  --h4-weight: 500;
  --h5-weight: 500;
  --h6-weight: 500;
}



/**** Theme Colors ****/


/** Dark Theme (Soft) **/

:root .theme-dark {
  --bg-dim-rgb: 41, 49, 54;
  --bg-dim:      #293136;
  --bg0:         #333C43;
  --bg1:         #3A464C;
  --bg2:         #434F55;
  --bg3:         #4D5960;
  --bg4:         #555F66;
  --bg5:         #5D6B66;
  
  --bg-visual:   #5C3F4F;
  --bg-red:      #59464C;
  --bg-green:    #48584E;
  --bg-blue:     #3F5865;
  --bg-yellow:   #55544A;
  
  --fg:          #D3C6AA;
  
  --fg-red:      #E67E80;
  --fg-orange:   #E69875;
  --fg-yellow:   #DBBC7F;
  --fg-green:    #A7C080;
  --fg-aqua:     #83C092;
  --fg-blue:     #7FBBB3;
  --fg-purple:   #D699B6;

  --header-red:       #da6362;
  --header-orange:    #d77f48;
  --header-yellow:    #bf983d;
  --header-green:     #899c40;
  --header-aqua:      #569d79;
  --header-blue:      #5a93a2;
  --header-purple:    #b87b9d;
  
  --grey0:       #7A8478;
  --grey1:       #859289;
  --grey2:       #9DA9A0;

  --statusline0: #A7C080;
  --statusline1: #D3C6AA;
  --statusline2: #E67E80;
  
  --background-embed: rgb(73 93 96 / 30%);
}


/** Light Theme (Hard) **/

:root .theme-light {
  --bg-dim-rgb: 242, 239, 223;
  --bg-dim:      #F2EFDF;
  --bg0:         #FFFBEF;
  --bg1:         #F8F5E4;
  --bg2:         #F2EFDF;
  --bg3:         #EDEADA;
  --bg4:         #E8E5D5;
  --bg5:         #BEC5B2;
  
  --bg-visual:   #ded8db; /* Changed for visibility */
  --bg-red:      #FFE7DE;
  --bg-green:    #F3F5D9;
  --bg-blue:     #ECF5ED;
  --bg-yellow:   #FEF2D5;
  
  --fg:          #5C6A72;
  
  --fg-red:      #F85552;
  --fg-orange:   #F57D26;
  --fg-yellow:   #DFA000;
  --fg-green:    #8DA101;
  --fg-aqua:     #35A77C;
  --fg-blue:     #3A94C5;
  --fg-purple:   #DF69BA;

  --header-red:       #f85552;
  --header-orange:    #f88f44;
  --header-yellow:    #f3b931;
  --header-green:     #abd113;
  --header-aqua:      #569d79;
  --header-blue:      #5a93a2;
  --header-purple:    #dd2b8d;
  
  --grey0:       #A6B0A0;
  --grey1:       #939F91;
  --grey2:       #829181;

  --statusline0: #93B259;
  --statusline1: #708089;
  --statusline2: #E66868;

  --background-embed: rgb(232 229 203 / 30%);
}



/**** General UI ****/


/** Workspace **/

/* Title Bar */
.workspace-leaf .view-header {
  box-shadow: 0 0 8px -4px var(--divider-color);
}

/* Title Text */
.view-header-title {
  font-weight: 600;
}

/* Gutters */
.markdown-source-view.mod-cm6 .cm-gutters {
  z-index: -1 !important;
  margin-inline-start: calc(0px - var(--file-folding-offset) - 12px);
  pointer-events: none;
}
.markdown-source-view.mod-cm6 .cm-content {
  width: fit-content;
}
.markdown-preview-view {
  padding-block: var(--file-margins);
  padding-right: 10px;
}
.cm-gutter .cm-active {
  color: var(--text-normal);
}

/* Collapse Indicator */
.markdown-source-view.mod-cm6 .cm-fold-indicator .collapse-indicator {
  padding-right: .45rem;
}
.markdown-source-view.mod-cm6 .cm-line:not(.cm-active):not(.HyperMD-header):not(.HyperMD-task-line, .HyperMD-list-line-1) .cm-fold-indicator .collapse-indicator {
  padding-right: .75rem;
}
div ul.has-list-bullet ul.has-list-bullet .collapse-indicator {
  margin-left: -2.75rem;
}
.markdown-rendered .list-collapse-indicator {
  padding-right: 1rem;
}



/**** Markdown ****/


/** Headers **/

/* Fix update formatting coloring */
.cm-formatting-header {
  color: unset;
}


/** Emphasis **/

/* Bold and Italic */
.cm-s-obsidian span.cm-strong,
strong,
.cm-s-obsidian span.cm-em,
em {
  color: var(--fg-purple);
}

/* Strike through */
.cm-strikethrough,
del {
  color: var(--text-faint);
}


/** Code **/

/* Inline Code */
.cm-s-obsidian span.cm-inline-code:not(.cm-formatting):not(.cm-formatting + .cm-inline-code),
.markdown-preview-view code {
  font-size: 0.9em;
  background-color: var(--code-background);
  padding: 0.1em 0.25em;
  border-radius: var(--radius-s)
}
.cm-s-obsidian span.cm-inline-code:not(.cm-formatting),
.markdown-preview-view code {
  color: var(--code-inline);
}

/* Codeblock */
.markdown-preview-view pre code {
  color: inherit;
}
.cm-s-obsidian pre.HyperMD-codeblock {
  background-color: var(--code-background);
}
pre {
  border: 1px solid var(--code-header);
}
.HyperMD-codeblock {
  border-color: var(--code-header);
  border-style: solid;
  border-width: 0 1px 0;
}
.HyperMD-codeblock-begin {
  border-width: 1px 1px 0;
}
.HyperMD-codeblock-end {
  border-width: 0 1px 1px;
}

/* Disable Wrap on Language Blocks */
.markdown-reading-view .markdown-preview-view pre:not(.frontmatter) code {
	white-space: pre;
}

/* Codeblock top bars */
pre[class^="language-"] {
  padding-top: calc(var(--size-4-2) + var(--code-size) * var(--line-height-normal));
}
pre[class^="language-"]::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  height: calc(var(--code-size) * var(--line-height-normal));
  background-color: var(--code-header);
}
.HyperMD-codeblock-begin-bg:not(:has(>.code-block-flair > *)):has(>.code-block-flair)::before {
  content: "";
  position: absolute;
  inset: 0;
  background-color: var(--code-header);
  border-radius: 4px 4px 0 0;
}

/* Codeblock language labels */
pre[class^="language-"]::after {
  content: attr(class);
  position: absolute;
  top: 0;
  right: 6px;
  padding: 0 4px;
  height: calc(0.875rem * var(--line-height-normal));
  display: flex;
  place-items: center;
  font-size: var(--font-ui-smaller);
}
.markdown-source-view.mod-cm6 .code-block-flair:not(:has(>svg)) {
  top: 0;
  padding: 0 4px;
  height: calc(0.875rem * var(--line-height-normal));
  display: flex;
  place-items: center;
  font-family: var(--font-monospace);
}
.markdown-rendered pre[class^="language-"] button.copy-code-button {
  top: calc(6px + var(--code-size) * var(--line-height-normal));
}

pre.language-c::after { content: "C" }
pre.language-python::after { content: "Python" }
pre.language-py::after { content: "Python" }
pre.language-nginx::after { content: "Nginx" }
pre.language-css::after { content: "CSS" }
pre.language-node::after { content: "Node" }
pre.language-react::after { content: "React" }
pre.language-javascript::after { content: "JavaScript" }
pre.language-js::after { content: "JavaScript" }
pre.language-typescript::after { content: "TypeScript" }
pre.language-ts::after { content: "TypeScript" }
pre.language-php::after { content: "PHP" }
pre.language-shell::after { content: "Shell" }
pre.language-bash::after { content: "Bash" }
pre.language-zsh::after { content: "zsh" }
pre.language-flow::after { content: "Flow" }
pre.language-sequence::after { content: "Sequence" }
pre.language-sql::after { content: "SQL" }
pre.language-yaml::after { content: "YAML" }
pre.language-ini::after { content: "INI" }
pre.language-xml::after { content: "XML" }
pre.language-git::after { content: "GIT" }
pre.language-cs::after { content: "C#" }
pre.language-cpp::after { content: "C++" }
pre.language-java::after { content: "JAVA" }
pre.language-html::after { content: "HTML" }
pre.language-txt::after { content: "Plain Text" }
pre.language-text::after { content: "Plain Text" }
pre.language-url::after { content: "URL" }
pre.language-applescript::after { content: "AppleScript" }
pre.language-markdown::after { content: "Markdown" }
pre.language-md::after { content: "Markdown" }
pre.language-regex::after { content: "Regex" }
pre.language-lua::after { content: "Lua" }
pre.language-haskell::after { content: "Haskell" }
pre.language-vim::after { content: "vimrc" }


/** Links **/

.cm-s-obsidian span.cm-hmd-internal-link {
  color: var(--text-link);
}

/* Wiki Links */
a.internal-link {
  color: var(--text-link);
}
.cm-s-obsidian span.cm-hmd-internal-link:hover,
a.internal-link:hover {
  color: var(--text-link-hover)
}

/* Markdown Links */
a.external-link {
  color: var(--text-link-external);
}
.markdown-source-view.mod-cm6 .cm-link .cm-underline:hover,
.markdown-source-view.mod-cm6 .cm-url .cm-underline:hover,
a.external-link:hover {
  color: var(--text-link-external-hover);
}

/* Unresolved Links */
a.is-unresolved,
.markdown-source-view.mod-cm6 span.is-unresolved > span.cm-underline {
  --link-unresolved-decoration-style: wavy;
  text-decoration-thickness: 0.0625em;
}


/** Lists **/

.markdown-source-view span.list-bullet {
  padding-right: .3rem;
}
.markdown-preview-view .list-bullet::after {
  font-size: 19px;
}
.markdown-source-view .list-bullet::after {
  font-size: 19px;
}

/* Indentation Lines*/
.cm-indent::before,
ul::before,
ol::before {
  opacity: 0.5;
  border-right: 2px solid var(--fg-blue) !important;
}

/*Checkbox List*/
ul > li.task-list-item .task-list-item-checkbox {
  margin-inline-start: calc(var(--checkbox-size) * -1.51);
}
.markdown-source-view.mod-cm6 input.task-list-item-checkbox {
  border-width: 1px;
  margin-left: 1px;
}
input.task-list-item-checkbox:hover {
  border-color: var(--header-blue);
}
input.task-list-item-checkbox:checked
{
  background-color: var(--fg-blue);
  box-shadow: inset 0 0 0 1px var(--background-primary);
}

.checkbox-container {
    background-color: var(--interactive-before);
}
.checkbox-container:after {
    background-color: var(--interactive-accent);
}
.checkbox-container.is-enabled:after {
    background-color: var(--bg3);
}


/** Blockquotes **/

.markdown-preview-view blockquote {
  padding-block: 0.25em;
}

/* Make blockquotes work in source view */
.markdown-source-view:not(.is-live-preview) .HyperMD-quote {
  background-color: var(--background-embed);
  border-left: var(--blockquote-border-thickness) solid var(--blockquote-border-color);
}
.markdown-source-view:not(.is-live-preview) .cm-formatting-quote:not(.cm-formatting-quote-1) {
  position: relative;
}
.markdown-source-view:not(.is-live-preview) .cm-formatting-quote:not(.cm-formatting-quote-1)::before {
  content: "\200b";
  position: absolute;
  width: 1px;
  border-left: var(--blockquote-border-thickness) solid var(--blockquote-border-color);
  color: transparent;
  left: -2px;
}


/** Tables **/

.markdown-rendered table {
  background-color: var(--bg1);
  margin-block: 0;
}

/* Fix Borders From Dataview */
.markdown-rendered .table-view-table > tbody > tr > td + td {
  border-left: var(--table-border-width) solid var(--table-border-color);
}
.markdown-rendered .table-view-table > tbody > tr + tr {
  border-top: var(--table-border-width) solid var(--table-border-color);
}


/** Tags **/

.cm-s-obsidian span.cm-hashtag,
a.tag {
  font-weight: 500;
}


/** Embeds **/

.markdown-embed {
  padding-inline: 10px;
}

/*Embed Titles*/
.markdown-embed-title {
  display: none;
}

/* Embed Backgrounds */
.internal-embed.is-loaded:not(.image-embed, [src$=".excalidraw"]) {
  background-color: var(--blockquote-background-color);
}

/* Embed First h1 */
.markdown-embed-content .markdown-preview-section h1:first-of-type {
  margin-top: 0.5rem;
}

/* Embed Last p */
.markdown-embed-content .markdown-preview-section p:last-of-type {
  margin-bottom: 0.125em;
}

/*
  This snippet adds modification in the [[markdown link# modification|caption]] format
*/

/* Clean embed (no background, padding, borders) */
.markdown-embed[alt~="clean"] {
  --blockquote-background-color: transparent;
  border: none;
  padding: 0;
}
/* Removes the first title */
.markdown-embed[alt~="no-title"] .markdown-preview-section > .mod-header + div:has(h1,h2,h3,h4,h5,h6) {
  display: none;
}


/** YAML **/

/* Frontmatter error */
.markdown-rendered .frontmatter.mod-failed:after {
  height: 0;
}
.mod-error {
  font-weight: 500;
}



/**** Graph ****/

.graph-view.color-circle,
.graph-view.color-fill-highlight {
  color: var(--text-muted);
}
.graph-view.color-arrow {
  color: var(--text-normal);
  opacity: 0.5;
}
.graph-view.color-line {
  color: var(--background-modifier-border);
}
.graph-view.color-fill-highlight,
.graph-view.color-line-highlight {
  color: var(--interactive-accent);
}
.graph-view.color-fill-unresolved {
  color: var(--text-muted);
  opacity: 0.4;
}



/**** Cursor ****/

.cm-cursorLayer .cm-cursor {}

/* animation of the blinking */
.cm-cursorLayer {
  /* deactivate built-in animation from CodeMirror */
  animation-name: none !important; /* important needed */
}

@keyframes phase-blink {
  15%, 49% { opacity: 1 }
  50%, 84% { opacity: 0 }
  85% { opacity: 1 }
}

.cm-cursorLayer .cm-cursor {
  animation-iteration-count: infinite;
  animation-duration: 1100ms;
  animation-name: phase-blink;
}



/**** Extra Fixes ****/


/** Callouts **/

.callout {
  --callout-content-padding: var(--size-4-2) var(--size-4-4);
  --callout-content-color: rgba(var(--bg-dim-rgb), 0.3);
  --callout-border-solid: 1px solid rgba(var(--callout-color), 0.3);
  --callout-border-dashed: 1px dashed rgba(var(--callout-color), 0.4);
  padding: 0;
  border-left: 0.125rem solid rgba(var(--callout-color), 0.7);
  border-top: var(--callout-border-solid);
  border-right: var(--callout-border-solid);
  border-bottom: var(--callout-border-solid);
  border-radius: 4px;
  mix-blend-mode: normal !important;
}
.callout, .cm-callout {
  box-shadow: 2px 2px 3px #0004;
}
.callout-title {
  padding: 0.5rem 0.75rem;
  gap: 0.5rem;
  border-radius: 4px 4px 0 0;
  background-color: rgba(var(--callout-color), 0.2);
}
.callout.is-collapsible .callout-title {
  cursor: pointer !important;
}
.callout-icon svg.svg-icon {
  color: rgb(var(--callout-color));
}
.callout-title-inner {
}
.theme-dark :is(.callout-icon svg.svg-icon, .callout-title-inner) {
  filter: brightness(1.4);
}
.theme-light :is(.callout-icon svg.svg-icon, .callout-title-inner) {
  filter: brightness(0.7);
}
.callout-fold {
  margin-left: auto;
}
.callout-content {
  border-top: var(--callout-border-dashed);
  border-radius: 0 0 4px 4px;
  background-color: rgba(var(--bg-dim-rgb), 0.3);
}
.callout-content > p:first-child {
  margin-top: 0;
}
.callout-content > p:last-child {
  margin-bottom: 0;
}

/* Quote callout */
.callout[data-callout="quote"] {
  display: flex;
  flex-direction: column-reverse;
  position: relative;
}
.callout[data-callout="quote"] .callout-title {
  background-color: var(--callout-content-color);
  padding: 0 1ch 1ch;
  display: block;
  text-align: right;
}
.callout[data-callout="quote"] .callout-title .callout-icon {
  display: none;
}
.callout[data-callout="quote"] .callout-content {
  border: none;
  padding-top: var(--size-4-4);
}

/* Custom Callouts */
/* Uses Material Colors 300-500 + A100 */
.callout[data-callout="math"] {
  --callout-color: 132, 255, 255;
  --callout-icon: lucide-sigma;
}
.callout[data-callout="math"] .callout-content {
  padding: 0 !important;
}
.callout[data-callout="math"] .callout-content .math-block {
  border: none
}
.callout[data-callout="graph"] {
  --callout-color: 255, 152, 0;
  --callout-icon: lucide-line-chart;
}
.callout[data-callout="image"] {
  --callout-color: 234, 128, 252;
  --callout-icon: lucide-image;
}
.callout[data-callout="image"] .callout-content {
  padding: 0 !important;
}
.callout[data-callout="code"] {
  --callout-color: 76, 175, 80;
  --callout-icon: lucide-curly-braces;
}
.callout[data-callout="code"] .callout-content {
  padding: 0 !important;
}
.callout[data-callout="code"] .callout-content > pre {
  margin-block: 0;
  background-color: var(--code-background);
}


/** Image Formatting **/

img {
  display: block;
  margin-inline: auto;
}

/* Makes multiple images on the same line appear in a flex grid */
.cm-line:not(.cm-active):has(.image-embed ~ .image-embed, img:not(.cm-widgetBuffer) ~ img:not(.cm-widgetBuffer)),
p:has(.image-embed ~ .image-embed, img ~ img) {
  display: flex;
  gap: 0.5rem;
}
.cm-line:not(.cm-active):has(.image-embed ~ .image-embed, img:not(.cm-widgetBuffer) ~ img:not(.cm-widgetBuffer)) :is(.cm-widgetBuffer,span) {
  display: none !important;
}
/* Makes a highlighted line shrink the image */
:root:root .cm-line.cm-active > :is(.image-embed, img) {
  width: 100px;
  display: inline-block;
}
/* Centers the image if it is modified */
:root:root .cm-line:not(.cm-active) > .image-embed,
p > .image-embed {
  display: flex;
  place-items: center;
  flex-direction: column;
}

/*
  This snippet adds modification in the ![[image link# modification|caption]] format
  Excalidraw is not supported as it has its own format of using alt text set max width in pixels
*/

/* Sizing */
.image-embed > img:not([width]),
span > img[src^="http"]:not([width]) {
  display: block;
  width: calc(var(--img-width, 100) / 100 * min(100%, var(--file-line-width)));
  margin-right: auto;
}
.image-embed[src~="1/4"],
img[src^="http"][alt~="1/4"] {
  --img-width: 25;
}
.image-embed[src~="1/3"],
img[src^="http"][alt~="1/3"] {
  --img-width: 33.3;
}
.image-embed[src~="1/2"],
img[src^="http"][alt~="1/2"] {
  --img-width: 50;
}
.image-embed[src~="2/3"],
img[src^="http"][alt~="2/3"] {
  --img-width: 66.6;
}
.image-embed[src~="3/4"],
img[src^="http"][alt~="3/4"] {
  --img-width: 75;
}

/* Alignment */
.image-embed[src~="left"] > img,
.markdown-source-view.mod-cm6 .cm-content img[src^="http"][alt~="left"],
img[src^="http"][alt~="left"] {
  margin-left: 0 !important;
}
.image-embed[src~="right"] > img,
.markdown-source-view.mod-cm6 .cm-content img[src^="http"][alt~="right"],
img[src^="http"][alt~="right"] {
  margin-right: 0 !important;
}
/* External images */
.markdown-source-view.mod-cm6 .cm-content > img {
  margin-inline: auto !important;
}

/* Floats */
.markdown-reading-view .image-embed[src~="float"] > img:not([width]) {
  width: calc(var(--img-width, 100) / 100 * var(--file-line-width));
  margin: 0 !important;
}
.markdown-reading-view .image-embed[src~="float"] {
  clear: both;
}
.markdown-reading-view .image-embed[src~="float"][src~="left"] {
  float: left;
  margin-right: 2%;
}
.markdown-reading-view .image-embed[src~="float"][src~="right"] {
  float: right;
  margin-left: 2%;
}

/* Image Alt Text Other Modifications */
.image-embed[src~="white"] > img,
img[src^="http"][alt~="white"] {
  background-color: white;
}
.image-embed[src~="black"] > img,
img[src^="http"][alt~="black"] {
  background-color: black;
}
.image-embed[src~="border"] > img,
img[src^="http"][alt~="border"] {
  border: .25rem solid var(--background-modifier-border);
}
.image-embed[src~="shadow"] > img,
img[src^="http"][alt~="shadow"] {
  box-shadow: 2px 2px 4px #0007;
}
.image-embed[src~="rounded"] > img,
img[src^="http"][alt~="rounded"] {
  border-radius: 0.5rem;
}
.image-embed[src~="blur"] > img,
img[src^="http"][alt~="blur"] {
  filter: blur(5px);
  transition: filter 500ms 250ms ease;
}
.image-embed[src~="blur"] > img:hover,
img[src^="http"][alt~="blur"]:hover {
  filter: blur(0);
}

/* Alt text as caption under image */
body:not(.no-image-alttext-caption) .image-embed:not([alt*=".png"], [alt*=".jpg"], [alt*=".jpeg"], [alt*=".tiff"], [alt*=".avif"])::after {
  display: block;
  content: attr(alt);
  color: var(--text-muted);
  margin-block: 0.25em;
  margin-inline: auto;
  text-align: center;
}
body:not(.no-image-alttext-caption) .image-embed:not([alt*=".png"], [alt*=".jpg"], [alt*=".jpeg"], [alt*=".tiff"], [alt*=".avif"])::after {
  width: calc(var(--img-width, 100) / 100 * min(100%, var(--file-line-width)));
}
body:not(.no-image-alttext-caption) .markdown-reading-view .image-embed[src~="float"]:not([alt*=".png"], [alt*=".jpg"], [alt*=".jpeg"], [alt*=".tiff"], [alt*=".avif"])::after {
  width: calc(var(--img-width, 100) / 100 * var(--file-line-width));
}
body:not(.no-image-alttext-caption) .image-embed:not([alt*=".png"], [alt*=".jpg"], [alt*=".jpeg"], [alt*=".tiff"], [alt*=".avif"])[src~="left"]::after {
  margin-inline: 0 auto;
}
body:not(.no-image-alttext-caption) .image-embed:not([alt*=".png"], [alt*=".jpg"], [alt*=".jpeg"], [alt*=".tiff"], [alt*=".avif"])[src~="right"]::after {
  margin-inline: auto 0;
}


/** CSS Classes **/

/* Custom Width Layout */
.full-width {
	--file-line-width: 100%;
}
.wide-width {
	--file-line-width: 1000px;

}

/* Numbered Lists to Columns in Read Mode */
.columns :where(div, li) > ol {
  list-style: none;
  display: grid;
grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: .5rem;
padding-left: 0;
}
.columns :where(div, li) > ol > li { 
outline: 1px solid var(--color-base-40);
padding: .5rem .75rem;
}
.columns :where(div, li) > ol > li > ul { 
background: none;
}
.columns :where(div, li) > ol > li > .list-collapse-indicator { 
display: none;
}
.columns :where(div, li) > ol > li > :where(ul, ol):before { 
border-right: none !important;
}

/* Custom Dashboard */
.dashboard {
  padding: 25px 20px !important;
}
.dashboard.is-readable-line-width:not(.full-width) .markdown-preview-section {
  width: 100% !important;
}
/* Title at top of the document */
.dashboard .markdown-preview-section .title {
  top: 60px;
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
  font-size: 26pt !important;
  font-weight: bolder;
  letter-spacing: 8px;
}

.dashboard h1 {
  border-bottom-style: dotted !important;
  border-width: 1px !important;
  padding-bottom: 3px !important;
}

.dashboard div > ul:not(.dataview) {
  list-style: none;
  display: grid;
grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: .5rem;
padding-left: 0;
}

.dashboard div > ul:not(.dataview) > li {
outline: 1px solid #fff2;
padding: .5rem .25rem;
}
.dashboard div > ul > li > .list-bullet {
display: none;
}
.dashboard div > ul > li > .list-collapse-indicator {
display: none;
}
.dashboard div > ul > li > ul:before {
border-right: none !important;
}


/** Misc. **/

/* Fix Dataview markers */
.dataview.list-view-ul li {
  list-style-type: none;
}
.dataview.list-view-ul li::before {
  visibility: visible;
  position: absolute;
  content: '\200B';
  pointer-events: none;
  border-radius: var(--list-bullet-radius);
  width: var(--list-bullet-size);
  height: var(--list-bullet-size);
  border: var(--list-bullet-border);
  transform: translate(-.85em, .6em);
  background-color: var(--list-marker-color);
  transition: transform 0.15s, box-shadow 0.15s;
}
.table-view-table > tbody > tr:hover {
  background-color: var(--table-row-background-hover) !important;
}

/* Make math display better */
div.math-block {
  padding-block: .125em;
  border: 1px solid #fff2;
  border-radius: 5px
}
/* Make the weird span ones also work */
p span.math-block > mjx-container {
  padding-block: 1rem;
  border: 1px solid #fff2;
  border-radius: 5px
}

/* Make MathJax text bigger */
.MJX-TEX {
  font-size: 110%;
}
/* Make \overline{} display on higher resolution screens*/
mjx-stretchy-h.mjx-c2013 mjx-ext mjx-c::before {
  font-weight: 900;
}

/* Add Outline to Math */
.math.math-block.cm-embed-block{
  border: 1px solid #fff2;
  border-radius: 5px
}

/* Make print break hr elements */
hr.page-break {
  opacity: 0.5;
  height: 1.5rem;
  display: flex;
  border-top: 4px dotted;
  background-color: unset;
}
hr.page-break::before {
    content: 'Page Break';
  font-size: .75em;
    margin-inline: auto;
}
@media print {
  hr.page-break {
    visibility: hidden;
    page-break-after: always;
  }
}

/* Fix gutter number vertical cutoff */

.ͼ1 .cm-lineNumbers .cm-gutterElement {
  line-height: normal !important;
}

/* Fix weird OL bug */
ol > li > p {
  margin: 0;
}

/* Make Backlinks padding more consistent */

.markdown-preview-view .embedded-backlinks {
  margin-top: 100px;
}

/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

function onElement(el, event, selector, listener, options) {
    el.on(event, selector, listener, options);
    return () => el.off(event, selector, listener, options);
}
class CopyUrlInPreview extends obsidian.Plugin {
    onload() {
        this.register(onElement(document, "contextmenu", "a.external-link", this.onClick.bind(this)));
    }
    // Android gives a PointerEvent, a child to MouseEvent.
    // Positions are not accurate from PointerEvent.
    // There's also TouchEvent
    // The event has target, path, toEvent (null on Android) for finding the link
    onClick(event) {
        if (!(event.target instanceof HTMLAnchorElement)) {
            return;
        }
        event.preventDefault();
        let link = event.target.href;
        const menu = new obsidian.Menu(this.app);
        menu.addItem((item) => item.setIcon("link")
            .setTitle("Copy url")
            .onClick(() => {
            navigator.clipboard.writeText(link);
            new obsidian.Notice("Url copied to your clipboard");
        }));
        menu.register(onElement(document, "keydown", "*", (e) => {
            if (e.key === "Escape") {
                e.preventDefault();
                e.stopPropagation();
                menu.hide();
            }
        }));
        menu.showAtPosition({ x: event.pageX, y: event.pageY });
        this.app.workspace.trigger("copy-url-in-preview:contextmenu", menu);
    }
}

module.exports = CopyUrlInPreview;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsibWFpbi50cyJdLCJzb3VyY2VzQ29udGVudCI6bnVsbCwibmFtZXMiOlsiUGx1Z2luIiwiTWVudSIsIk5vdGljZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBUUEsU0FBUyxTQUFTLENBQ2pCLEVBQVksRUFDWixLQUFnQyxFQUNoQyxRQUFnQixFQUNoQixRQUFrQixFQUNsQixPQUFnQztJQUVoQyxFQUFFLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzFDLE9BQU8sTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3pELENBQUM7TUFFb0IsZ0JBQWlCLFNBQVFBLGVBQU07SUFDbkQsTUFBTTtRQUNMLElBQUksQ0FBQyxRQUFRLENBQ1osU0FBUyxDQUNSLFFBQVEsRUFDUixhQUEwQyxFQUMxQyxpQkFBaUIsRUFDakIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQ3ZCLENBQ0QsQ0FBQztLQUNGOzs7OztJQU1ELE9BQU8sQ0FBQyxLQUFpQjtRQUN4QixJQUFJLEVBQUUsS0FBSyxDQUFDLE1BQU0sWUFBWSxpQkFBaUIsQ0FBQyxFQUFFO1lBQ2pELE9BQU87U0FDUDtRQUVELEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUV2QixJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztRQUU3QixNQUFNLElBQUksR0FBRyxJQUFJQyxhQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFjLEtBQzNCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO2FBQ2xCLFFBQVEsQ0FBQyxVQUFVLENBQUM7YUFDcEIsT0FBTyxDQUFDO1lBQ1IsU0FBUyxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDcEMsSUFBSUMsZUFBTSxDQUFDLDhCQUE4QixDQUFDLENBQUM7U0FDM0MsQ0FBQyxDQUNILENBQUM7UUFDRixJQUFJLENBQUMsUUFBUSxDQUNaLFNBQVMsQ0FDUixRQUFRLEVBQ1IsU0FBc0MsRUFDdEMsR0FBRyxFQUNILENBQUMsQ0FBZ0I7WUFDaEIsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLFFBQVEsRUFBRTtnQkFDdkIsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO2dCQUNuQixDQUFDLENBQUMsZUFBZSxFQUFFLENBQUM7Z0JBQ3BCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQzthQUNaO1NBQ0QsQ0FDRCxDQUNELENBQUM7UUFDRixJQUFJLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBRXhELElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxpQ0FBaUMsRUFBRSxJQUFJLENBQUMsQ0FBQztLQUNwRTs7Ozs7In0=
